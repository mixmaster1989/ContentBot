require('dotenv').config();
const { MTProtoClient } = require('../telegram_parser/dist/mtproto/client');
const { Api } = require('telegram');

class MilitaristFinder {
  constructor() {
    this.mt = MTProtoClient.get();
    this.client = this.mt.getClient();
  }

  async init() {
    try {
      await this.client.connect();
      console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Telegram —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:', error);
    }
  }

  // –ü–æ–∏—Å–∫ –∫–∞–Ω–∞–ª–∞ "–ú–∏–ª–∏—Ç–∞—Ä–∏—Å—Ç"
  async findMilitaristChannel() {
    try {
      console.log('üéØ –ü–æ–∏—Å–∫ –∫–∞–Ω–∞–ª–∞ "–ú–∏–ª–∏—Ç–∞—Ä–∏—Å—Ç"...\n');
      
      const dialogs = await this.client.invoke(
        new Api.messages.GetDialogs({
          offsetDate: 0,
          offsetId: 0,
          offsetPeer: new Api.InputPeerEmpty(),
          limit: 1000,
          hash: 0n
        })
      );

      console.log(`üìã –ù–∞–π–¥–µ–Ω–æ ${dialogs.dialogs.length} –¥–∏–∞–ª–æ–≥–æ–≤`);
      console.log(`üìä –ù–∞–π–¥–µ–Ω–æ ${dialogs.chats.length} —á–∞—Ç–æ–≤/–∫–∞–Ω–∞–ª–æ–≤\n`);

      // –ò—â–µ–º –∫–∞–Ω–∞–ª "–ú–∏–ª–∏—Ç–∞—Ä–∏—Å—Ç"
      const militaristChannel = dialogs.chats.find(chat => 
        chat.title && chat.title.toLowerCase().includes('–º–∏–ª–∏—Ç–∞—Ä–∏—Å—Ç')
      );

      if (militaristChannel) {
        console.log('üéØ –ö–ê–ù–ê–õ "–ú–ò–õ–ò–¢–ê–†–ò–°–¢" –ù–ê–ô–î–ï–ù!');
        console.log('=' .repeat(50));
        console.log(`üì∫ –ù–∞–∑–≤–∞–Ω–∏–µ: ${militaristChannel.title}`);
        console.log(`üÜî ID: ${militaristChannel.id}`);
        console.log(`üë§ Username: @${militaristChannel.username || '–Ω–µ —É–∫–∞–∑–∞–Ω'}`);
        console.log(`üìä –¢–∏–ø: ${militaristChannel.className}`);
        console.log(`üì° Broadcast: ${militaristChannel.broadcast}`);
        console.log(`üë• –£—á–∞—Å—Ç–Ω–∏–∫–æ–≤: ${militaristChannel.participantsCount || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}`);
        console.log(`üìù –û–ø–∏—Å–∞–Ω–∏–µ: ${militaristChannel.about || '–Ω–µ —É–∫–∞–∑–∞–Ω–æ'}`);
        
        // –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        console.log('\nüìù –ü–æ–ª—É—á–∞—é –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è...');
        await this.getLastMessages(militaristChannel.id);
        
        return militaristChannel;
      } else {
        console.log('‚ùå –ö–∞–Ω–∞–ª "–ú–∏–ª–∏—Ç–∞—Ä–∏—Å—Ç" –Ω–µ –Ω–∞–π–¥–µ–Ω');
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –∫–∞–Ω–∞–ª—ã –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
        console.log('\nüì∫ –í—Å–µ –≤–∞—à–∏ –∫–∞–Ω–∞–ª—ã:');
        console.log('=' .repeat(30));
        dialogs.chats.forEach((chat, index) => {
          if (chat.title) {
            console.log(`${index + 1}. ${chat.title} (ID: ${chat.id})`);
          }
        });
        
        return null;
      }

    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –∫–∞–Ω–∞–ª–∞:', error);
      return null;
    }
  }

  // –ü–æ–ª—É—á–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ –∫–∞–Ω–∞–ª–∞
  async getLastMessages(channelId) {
    try {
      const messages = await this.client.invoke(
        new Api.messages.GetHistory({
          peer: channelId,
          limit: 5,
          offsetDate: 0,
          offsetId: 0,
          maxId: 0,
          minId: 0,
          addOffset: 0,
          hash: 0n
        })
      );

      console.log(`\nüìù –ü–æ—Å–ª–µ–¥–Ω–∏–µ ${messages.messages.length} —Å–æ–æ–±—â–µ–Ω–∏–π:`);
      console.log('=' .repeat(50));

      messages.messages.forEach((msg, index) => {
        if (msg.message) {
          const date = new Date(msg.date * 1000).toLocaleString('ru');
          const text = msg.message.length > 100 ? 
            msg.message.substring(0, 100) + '...' : 
            msg.message;
          
          console.log(`\n${index + 1}. [${date}]`);
          console.log(`   –ü—Ä–æ—Å–º–æ—Ç—Ä–æ–≤: ${msg.views || 0}`);
          console.log(`   –¢–µ–∫—Å—Ç: ${text}`);
        }
      });

    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π:', error);
    }
  }

  async close() {
    if (this.client) {
      await this.client.disconnect();
      console.log('\nüõë –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–æ');
    }
  }
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
async function findMilitarist() {
  const finder = new MilitaristFinder();
  
  try {
    await finder.init();
    const channel = await finder.findMilitaristChannel();
    
    if (channel) {
      console.log('\n‚úÖ –ü–æ–∏—Å–∫ –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!');
      console.log(`üéØ –ö–∞–Ω–∞–ª –Ω–∞–π–¥–µ–Ω: ${channel.title} (ID: ${channel.id})`);
    } else {
      console.log('\n‚ùå –ö–∞–Ω–∞–ª "–ú–∏–ª–∏—Ç–∞—Ä–∏—Å—Ç" –Ω–µ –Ω–∞–π–¥–µ–Ω —Å—Ä–µ–¥–∏ –≤–∞—à–∏—Ö –ø–æ–¥–ø–∏—Å–æ–∫');
    }
    
  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
  } finally {
    await finder.close();
  }
}

// –ó–∞–ø—É—Å–∫ –ø–æ–∏—Å–∫–∞
if (require.main === module) {
  findMilitarist();
}

module.exports = { MilitaristFinder };

