const fs = require('fs');
const path = require('path');

class AnalysisDashboard {
  constructor(jsonFile) {
    this.analysis = JSON.parse(fs.readFileSync(jsonFile, 'utf8'));
  }

  // –ö—Ä–∞—Å–∏–≤—ã–π –≤—ã–≤–æ–¥ –∞–Ω–∞–ª–∏–∑–∞
  displayAnalysis() {
    console.log('\n' + '='.repeat(80));
    console.log(`üìä –ê–ù–ê–õ–ò–ó –ö–ê–ù–ê–õ–ê: ${this.analysis.channel_name}`);
    console.log('='.repeat(80));
    
    this.displaySentiment();
    this.displayUniqueness();
    this.displayEntities();
    this.displayRecommendations();
  }

  displaySentiment() {
    const sent = this.analysis.sentiment_analysis;
    console.log('\nüéØ –ü–û–õ–ò–¢–ò–ß–ï–°–ö–ò–ô –ê–ù–ê–õ–ò–ó');
    console.log('‚îÄ'.repeat(50));
    console.log(`üìà –û—Ä–∏–µ–Ω—Ç–∞—Ü–∏—è: ${sent.orientation.toUpperCase()}`);
    console.log(`üìä –ë–∞–ª–ª: ${sent.sentiment_score}/100`);
    console.log(`üéØ –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: ${sent.confidence}`);
    console.log(`üëÄ –ü—Ä–æ—Å–º–æ—Ç—Ä—ã: ${sent.total_views.toLocaleString()}`);
    console.log(`üìù –°–æ–æ–±—â–µ–Ω–∏–π –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ: ${sent.messages_analyzed}`);
    
    console.log('\nüî• –ö–ª—é—á–µ–≤—ã–µ —Ç–µ–º—ã:');
    sent.key_topics.forEach((topic, i) => {
      console.log(`   ${i + 1}. ${topic}`);
    });
  }

  displayUniqueness() {
    const uniq = this.analysis.uniqueness_analysis;
    console.log('\nüíé –ê–ù–ê–õ–ò–ó –£–ù–ò–ö–ê–õ–¨–ù–û–°–¢–ò');
    console.log('‚îÄ'.repeat(50));
    console.log(`‚≠ê –û–±—â–∞—è —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å: ${uniq.uniqueness_score}/100`);
    console.log(`üé® –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ—Å—Ç—å: ${uniq.originality}/100`);
    console.log(`üîí –≠–∫—Å–∫–ª—é–∑–∏–≤–Ω–æ—Å—Ç—å: ${uniq.exclusivity}/100`);
    console.log(`üìÖ –°–≤–µ–∂–µ—Å—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç–∞: ${uniq.content_freshness}/100`);
    
    console.log('\n‚ú® –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Ç–µ–º—ã:');
    uniq.unique_topics.slice(0, 3).forEach((topic, i) => {
      console.log(`   ${i + 1}. ${topic}`);
    });
  }

  displayEntities() {
    const entities = this.analysis.entities_analysis;
    console.log('\nüè∑Ô∏è –ê–ù–ê–õ–ò–ó –°–£–©–ù–û–°–¢–ï–ô');
    console.log('‚îÄ'.repeat(50));
    
    if (entities.people.length > 0) {
      console.log(`üë• –õ—é–¥–∏: ${entities.people.join(', ')}`);
    }
    if (entities.organizations.length > 0) {
      console.log(`üè¢ –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏: ${entities.organizations.join(', ')}`);
    }
    if (entities.countries.length > 0) {
      console.log(`üåç –°—Ç—Ä–∞–Ω—ã: ${entities.countries.join(', ')}`);
    }
    
    if (entities.people.length === 0 && entities.organizations.length === 0 && entities.countries.length === 0) {
      console.log('‚ö†Ô∏è –ê–Ω–∞–ª–∏–∑ —Å—É—â–Ω–æ—Å—Ç–µ–π –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω');
    }
  }

  displayRecommendations() {
    const uniq = this.analysis.uniqueness_analysis;
    console.log('\nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –î–õ–Ø –£–õ–£–ß–®–ï–ù–ò–Ø');
    console.log('‚îÄ'.repeat(50));
    uniq.recommendations.forEach((rec, i) => {
      console.log(`${i + 1}. ${rec}`);
    });
  }

  // –≠–∫—Å–ø–æ—Ä—Ç –≤ —Ä–∞–∑–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã
  exportToMarkdown() {
    const sent = this.analysis.sentiment_analysis;
    const uniq = this.analysis.uniqueness_analysis;
    
    let markdown = `# –ê–Ω–∞–ª–∏–∑ –∫–∞–Ω–∞–ª–∞ "${this.analysis.channel_name}"\n\n`;
    markdown += `**–î–∞—Ç–∞ –∞–Ω–∞–ª–∏–∑–∞:** ${this.analysis.analysis_date}\n`;
    markdown += `**–í—Ä–µ–º—è –∞–Ω–∞–ª–∏–∑–∞:** ${this.analysis.analysis_duration_seconds} —Å–µ–∫—É–Ω–¥\n\n`;
    
    markdown += `## üéØ –ü–æ–ª–∏—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑\n`;
    markdown += `- **–û—Ä–∏–µ–Ω—Ç–∞—Ü–∏—è:** ${sent.orientation}\n`;
    markdown += `- **–ë–∞–ª–ª:** ${sent.sentiment_score}/100\n`;
    markdown += `- **–£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å:** ${sent.confidence}\n`;
    markdown += `- **–ü—Ä–æ—Å–º–æ—Ç—Ä—ã:** ${sent.total_views.toLocaleString()}\n\n`;
    
    markdown += `## üíé –£–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç–∞\n`;
    markdown += `- **–û–±—â–∞—è —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å:** ${uniq.uniqueness_score}/100\n`;
    markdown += `- **–û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ—Å—Ç—å:** ${uniq.originality}/100\n`;
    markdown += `- **–≠–∫—Å–∫–ª—é–∑–∏–≤–Ω–æ—Å—Ç—å:** ${uniq.exclusivity}/100\n\n`;
    
    return markdown;
  }

  // –ü–æ–ª—É—á–∏—Ç—å –º–µ—Ç—Ä–∏–∫–∏ –¥–ª—è API
  getMetrics() {
    return {
      channel: this.analysis.channel_name,
      political_orientation: this.analysis.sentiment_analysis.orientation,
      political_score: this.analysis.sentiment_analysis.sentiment_score,
      uniqueness_score: this.analysis.uniqueness_analysis.uniqueness_score,
      total_views: this.analysis.sentiment_analysis.total_views,
      messages_analyzed: this.analysis.sentiment_analysis.messages_analyzed,
      analysis_date: this.analysis.analysis_date
    };
  }
}

// –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ
if (require.main === module) {
  const dashboard = new AnalysisDashboard('full_ai_analysis_2025-09-16T07-02-25-264Z.json');
  dashboard.displayAnalysis();
  
  // –≠–∫—Å–ø–æ—Ä—Ç –≤ markdown
  const markdown = dashboard.exportToMarkdown();
  fs.writeFileSync('analysis_report.md', markdown);
  console.log('\nüìÑ –û—Ç—á–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ analysis_report.md');
}

module.exports = AnalysisDashboard;
