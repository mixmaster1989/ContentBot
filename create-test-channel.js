#!/usr/bin/env node
/**
 * üöÄ ContentBot - –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞
 * –°–æ–∑–¥–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–π –∫–∞–Ω–∞–ª –∏ –ø–æ—Å—Ç–∏—Ç —Ç—É–¥–∞ –∫–æ–Ω—Ç–µ–Ω—Ç
 */

require('dotenv').config();
const axios = require('axios');

console.log('üöÄ ContentBot - –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞');
console.log('='*50);

const BOT_TOKEN = process.env.BOT_TOKEN;
const ADMIN_BOT_TOKEN = process.env.ADMIN_BOT_TOKEN;

async function createTestChannel() {
    try {
        console.log('üì∫ –°–æ–∑–¥–∞—é —Ç–µ—Å—Ç–æ–≤—ã–π –∫–∞–Ω–∞–ª —á–µ—Ä–µ–∑ Admin Bot...');
        
        const response = await axios.post(
            `https://api.telegram.org/bot${ADMIN_BOT_TOKEN}/createChannel`,
            {
                title: 'ContentBot Test Channel',
                description: '–¢–µ—Å—Ç–æ–≤—ã–π –∫–∞–Ω–∞–ª –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ ContentBot'
            }
        );

        if (response.data.ok) {
            const channelId = response.data.result.id;
            console.log(`‚úÖ –ö–∞–Ω–∞–ª —Å–æ–∑–¥–∞–Ω! ID: ${channelId}`);
            return channelId;
        } else {
            console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∫–∞–Ω–∞–ª —á–µ—Ä–µ–∑ API');
            return null;
        }

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞–Ω–∞–ª–∞:', error.message);
        return null;
    }
}

async function postToBot() {
    try {
        console.log('üì§ –û—Ç–ø—Ä–∞–≤–ª—è—é –ø–æ—Å—Ç —á–µ—Ä–µ–∑ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –±–æ—Ç–∞...');
        
        const content = `üî• ContentBot - –ñ–ò–í–ê–Ø –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø!

–≠—Ç–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–Ω–Ω—ã–π –ø–æ—Å—Ç —á–µ—Ä–µ–∑ –Ω–µ–π—Ä–æ—Å–µ—Ç—å Cloud.ru

‚ú® –§—É–Ω–∫—Ü–∏–∏:
‚Ä¢ –ü–∞—Ä—Å–∏–Ω–≥ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –∏–∑ Telegram
‚Ä¢ –ü–µ—Ä–µ–ø–∏—Å—ã–≤–∞–Ω–∏–µ —á–µ—Ä–µ–∑ GPT-4  
‚Ä¢ –ê–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥ –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é
‚Ä¢ 10+ —Å—Ç–∏–ª–µ–π –Ω–∞–ø–∏—Å–∞–Ω–∏—è

üí∞ –ú–æ–Ω–µ—Ç–∏–∑–∞—Ü–∏—è: 3000‚ÇΩ/–º–µ—Å—è—Ü –∑–∞ –∫–∞–Ω–∞–ª

üöÄ –ö—Ç–æ —Ö–æ—á–µ—Ç —Ç–∞–∫—É—é –∂–µ —Å–∏—Å—Ç–µ–º—É?`;

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–µ–±–µ –≤ –ª–∏—á–∫—É
        const response = await axios.post(
            `https://api.telegram.org/bot${BOT_TOKEN}/sendMessage`,
            {
                chat_id: process.env.OWNER_ID,
                text: content,
                parse_mode: 'Markdown'
            }
        );

        if (response.data.ok) {
            console.log('‚úÖ –ü–æ—Å—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —Ç–µ–±–µ –≤ –ª–∏—á–∫—É!');
            console.log(`üì± Message ID: ${response.data.result.message_id}`);
            return true;
        } else {
            console.log('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏:', response.data);
            return false;
        }

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —á–µ—Ä–µ–∑ –±–æ—Ç–∞:', error.message);
        return false;
    }
}

async function showInstructions() {
    console.log('\nüìã –ö–ê–ö –£–í–ò–î–ï–¢–¨ –†–ï–ó–£–õ–¨–¢–ê–¢:');
    console.log('');
    console.log('1Ô∏è‚É£ –ü–†–û–í–ï–†–¨ TELEGRAM:');
    console.log('   üì± –û—Ç–∫—Ä–æ–π Telegram –Ω–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–µ/–∫–æ–º–ø—å—é—Ç–µ—Ä–µ');
    console.log(`   ü§ñ –ù–∞–π–¥–∏ –±–æ—Ç–∞ –ø–æ —Ç–æ–∫–µ–Ω—É: ${BOT_TOKEN.split(':')[0]}`);
    console.log('   üí¨ –¢–∞–º –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç ContentBot');
    console.log('');
    console.log('2Ô∏è‚É£ –ï–°–õ–ò –ù–ï –ü–†–ò–®–õ–û:');
    console.log('   üîß –ó–∞–ø—É—Å—Ç–∏ –ø–æ–ª–Ω—É—é —Å–∏—Å—Ç–µ–º—É: ./start.sh pm2');
    console.log('   üìù –ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É /demo –≤ –±–æ—Ç–µ');
    console.log('');
    console.log('3Ô∏è‚É£ –ì–û–¢–û–í–´–ô –ö–û–ù–¢–ï–ù–¢ –í–´–®–ï:');
    console.log('   üìã –°–∫–æ–ø–∏—Ä—É–π –∏ –≤—Ä—É—á–Ω—É—é –∑–∞–ø–æ—Å—Ç–∏ –∫—É–¥–∞ –Ω—É–∂–Ω–æ');
    console.log('   üíæ –≠—Ç–æ –ø—Ä–∏–º–µ—Ä —Ç–æ–≥–æ, —á—Ç–æ –±—É–¥–µ—Ç –≥–µ–Ω–µ—Ä–∏—Ç—å—Å—è');
    console.log('');
    console.log('4Ô∏è‚É£ –ü–û–õ–ù–ê–Ø –°–ò–°–¢–ï–ú–ê:');
    console.log('   üöÄ ./start.sh pm2');
    console.log('   üí∞ –ì–æ—Ç–æ–≤–∞ –∫ –ø—Ä–æ–¥–∞–∂–∞–º!');
    console.log('');
}

async function main() {
    try {
        console.log('üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–æ–≤:');
        console.log(`ü§ñ BOT_TOKEN: ${BOT_TOKEN ? '‚úÖ' : '‚ùå'}`);
        console.log(`üëë ADMIN_BOT_TOKEN: ${ADMIN_BOT_TOKEN ? '‚úÖ' : '‚ùå'}`);
        console.log(`üë§ OWNER_ID: ${process.env.OWNER_ID}`);
        console.log('');

        // –ü—Ä–æ–±—É–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ—Å—Ç —Ç–µ–±–µ –≤ –ª–∏—á–∫—É
        const sent = await postToBot();
        
        if (sent) {
            console.log('üéâ –£–°–ü–ï–•! –ö–æ–Ω—Ç–µ–Ω—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!');
        }

        await showInstructions();

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
        await showInstructions();
    }
}

main().catch(console.error); 