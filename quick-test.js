#!/usr/bin/env node
/**
 * üöÄ ContentBot - –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–∞–∫ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Å–∏—Å—Ç–µ–º–∞ –ë–ï–ó –ø–æ–ª–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞
 */

require('dotenv').config();
const { OpenAI } = require('openai');

console.log('üöÄ ContentBot - –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –∫–æ–Ω—Ç–µ–Ω—Ç–∞');
console.log('='*50);

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ OpenAI (–∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–≤–æ–∏ –∫–ª—é—á–∏)
const openai = new OpenAI({
    apiKey: process.env.OPENAI_API_KEY,
    baseURL: 'https://openrouter.ai/api/v1'
});

// –ü—Ä–∏–º–µ—Ä—ã –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ (–∏–º–∏—Ç–∏—Ä—É–µ–º –ø–∞—Ä—Å–∏–Ω–≥)
const sampleContent = [
    "–£—Å–ø–µ—Ö –≤ –±–∏–∑–Ω–µ—Å–µ —Ç—Ä–µ–±—É–µ—Ç –Ω–µ —Ç–æ–ª—å–∫–æ —Ç–∞–ª–∞–Ω—Ç–∞, –Ω–æ –∏ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–≥–æ —Ä–∞–∑–≤–∏—Ç–∏—è. –ö–∞–∂–¥—ã–π –¥–µ–Ω—å –¥–∞–µ—Ç –Ω–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è —Ä–æ—Å—Ç–∞ –∏ –æ–±—É—á–µ–Ω–∏—è.",
    "–ú–æ—Ç–∏–≤–∞—Ü–∏—è ‚Äî —ç—Ç–æ –Ω–µ —Ç–æ, —á—Ç–æ –ø—Ä–∏—Ö–æ–¥–∏—Ç —Å–∞–º–æ –ø–æ —Å–µ–±–µ. –≠—Ç–æ —Ç–æ, —á—Ç–æ –º—ã —Å–æ–∑–¥–∞–µ–º –∫–∞–∂–¥—ã–π –¥–µ–Ω—å —á–µ—Ä–µ–∑ –Ω–∞—à–∏ –¥–µ–π—Å—Ç–≤–∏—è –∏ —Ä–µ—à–µ–Ω–∏—è.",
    "–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ —Ä–∞–∑–≤–∏–≤–∞—é—Ç—Å—è —Å –Ω–µ–≤–µ—Ä–æ—è—Ç–Ω–æ–π —Å–∫–æ—Ä–æ—Å—Ç—å—é. –¢–æ, —á—Ç–æ –∫–∞–∑–∞–ª–æ—Å—å –Ω–µ–≤–æ–∑–º–æ–∂–Ω—ã–º –≤—á–µ—Ä–∞, —Å–µ–≥–æ–¥–Ω—è —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –æ–±—ã–¥–µ–Ω–Ω–æ—Å—Ç—å—é.",
    "–ü—Å–∏—Ö–æ–ª–æ–≥–∏—è —É—Å–ø–µ—Ö–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç: –Ω–∞—à –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –¥–∏–∞–ª–æ–≥ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –≤–Ω–µ—à–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã. –î—É–º–∞–π—Ç–µ –ø–æ–∑–∏—Ç–∏–≤–Ω–æ!"
];

// –°—Ç–∏–ª–∏ –ø–µ—Ä–µ–ø–∏—Å—ã–≤–∞–Ω–∏—è
const styles = {
    '–º–æ—Ç–∏–≤–∞—Ü–∏—è': {
        tone: '–≤–¥–æ—Ö–Ω–æ–≤–ª—è—é—â–∏–π –∏ —ç–Ω–µ—Ä–≥–∏—á–Ω—ã–π',
        emoji: 'üî•üí™‚ö°üéØüöÄ',
        cta: '\n\nüî• –ê –∫–∞–∫ —Ç—ã –º–æ—Ç–∏–≤–∏—Ä—É–µ—à—å —Å–µ–±—è? –ü–æ–¥–µ–ª–∏—Å—å!'
    },
    '–±–∏–∑–Ω–µ—Å': {
        tone: '–ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –∏ –ø—Ä–∞–∫—Ç–∏—á–Ω—ã–π', 
        emoji: 'üíºüìàüí∞üéØüìä',
        cta: '\n\nüìà –ü—Ä–∏–º–µ–Ω—è–µ—à—å —ç—Ç–∏ –ø—Ä–∏–Ω—Ü–∏–ø—ã? –†–∞—Å—Å–∫–∞–∂–∏!'
    },
    '—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏': {
        tone: '—Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–π',
        emoji: 'ü§ñüíªüì±‚öôÔ∏èüî¨',
        cta: '\n\nüíª –ß—Ç–æ –¥—É–º–∞–µ—à—å –æ–± —ç—Ç–æ–π —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏?'
    },
    '–ø—Å–∏—Ö–æ–ª–æ–≥–∏—è': {
        tone: '–ø–æ–Ω–∏–º–∞—é—â–∏–π –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—â–∏–π',
        emoji: 'üß†üí≠üåü‚ù§Ô∏èüîÆ', 
        cta: '\n\nüåü –°–æ–≥–ª–∞—Å–µ–Ω? –°—Ç–∞–≤—å ‚ù§Ô∏è'
    }
};

async function rewriteContent(originalText, style) {
    try {
        const styleConfig = styles[style] || styles['–º–æ—Ç–∏–≤–∞—Ü–∏—è'];
        
        const prompt = `
–ü–µ—Ä–µ–ø–∏—Å–∞—Ç—å —ç—Ç–æ—Ç —Ç–µ–∫—Å—Ç –≤ —Å—Ç–∏–ª–µ "${style}":

–û–†–ò–ì–ò–ù–ê–õ: "${originalText}"

–¢–†–ï–ë–û–í–ê–ù–ò–Ø:
- –¢–æ–Ω: ${styleConfig.tone}
- –î–ª–∏–Ω–∞: 300-800 —Å–∏–º–≤–æ–ª–æ–≤
- –Ø–∑—ã–∫: —Ä—É—Å—Å–∫–∏–π  
- –°–¥–µ–ª–∞–π —É–Ω–∏–∫–∞–ª—å–Ω—ã–º –∏ –≤–æ–≤–ª–µ–∫–∞—é—â–∏–º
- –ù–ï –¥–æ–±–∞–≤–ª—è–π —ç–º–æ–¥–∑–∏ (–¥–æ–±–∞–≤–ª—é –æ—Ç–¥–µ–ª—å–Ω–æ)

–ü–ï–†–ï–ü–ò–°–ê–ù–ù–´–ô –¢–ï–ö–°–¢:`;

        const response = await openai.chat.completions.create({
            model: "openai/gpt-4o-mini",
            messages: [
                {
                    role: "system",
                    content: "–¢—ã –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –∫–æ–ø–∏—Ä–∞–π—Ç–µ—Ä. –ü–µ—Ä–µ–ø–∏—Å—ã–≤–∞–π –∫–æ–Ω—Ç–µ–Ω—Ç –¥–µ–ª–∞—è –µ–≥–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã–º –∏ –≤–æ–≤–ª–µ–∫–∞—é—â–∏–º."
                },
                {
                    role: "user",
                    content: prompt
                }
            ],
            max_tokens: 500,
            temperature: 0.8
        });

        let rewritten = response.choices[0].message.content.trim();
        
        // –î–æ–±–∞–≤–ª—è–µ–º —ç–º–æ–¥–∑–∏
        const emoji = styleConfig.emoji.split('')[Math.floor(Math.random() * styleConfig.emoji.length)];
        rewritten = `${emoji} ${rewritten}`;
        
        // –î–æ–±–∞–≤–ª—è–µ–º CTA
        rewritten += styleConfig.cta;
        
        return rewritten;
        
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ LLM:', error.message);
        return `üî• ${originalText}\n\nüí≠ –ê —á—Ç–æ –¥—É–º–∞–µ—à—å —Ç—ã?`;
    }
}

async function testContentGeneration() {
    console.log('üîç –¢–µ—Å—Ç–∏—Ä—É—é –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –∫–æ–Ω—Ç–µ–Ω—Ç–∞...\n');
    
    const stylesList = Object.keys(styles);
    
    for (let i = 0; i < 4; i++) {
        const originalContent = sampleContent[i];
        const style = stylesList[i];
        
        console.log(`üìù –¢–ï–°–¢ ${i + 1}: –°—Ç–∏–ª—å "${style}"`);
        console.log(`üìÑ –ò—Å—Ö–æ–¥–Ω–∏–∫: ${originalContent}`);
        console.log('ü§ñ –ü–µ—Ä–µ–ø–∏—Å—ã–≤–∞—é —á–µ—Ä–µ–∑ GPT-4...');
        
        const rewrittenContent = await rewriteContent(originalContent, style);
        
        console.log(`‚úÖ –†–ï–ó–£–õ–¨–¢–ê–¢:\n${rewrittenContent}`);
        console.log('\n' + '‚îÄ'.repeat(60) + '\n');
        
        // –ü–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
        await new Promise(resolve => setTimeout(resolve, 1000));
    }
}

async function showSystemInfo() {
    console.log('üìä –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –°–ò–°–¢–ï–ú–ï:');
    console.log(`üîë OpenAI API: ${process.env.OPENAI_API_KEY ? '‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω' : '‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω'}`);
    console.log(`üì± Telegram API_ID: ${process.env.API_ID || '‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω'}`);
    console.log(`üîê –°–µ—Å—Å–∏—è: ${require('fs').existsSync('.session.json') ? '‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–∞' : '‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}`);
    console.log(`üéØ Target Channel: ${process.env.TARGET_CHANNEL_ID || '–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω'}`);
    console.log('');
}

async function simulateRealWork() {
    console.log('üé≠ –°–ò–ú–£–õ–Ø–¶–ò–Ø –†–ï–ê–õ–¨–ù–û–ô –†–ê–ë–û–¢–´ ContentBot:');
    console.log('');
    
    console.log('1Ô∏è‚É£ –ü–∞—Ä—Å–∏–Ω–≥ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –∏–∑ Telegram –∫–∞–Ω–∞–ª–æ–≤...');
    await new Promise(resolve => setTimeout(resolve, 1000));
    console.log('   ‚úÖ –ù–∞–π–¥–µ–Ω–æ 15 –Ω–æ–≤—ã—Ö –ø–æ—Å—Ç–æ–≤');
    
    console.log('2Ô∏è‚É£ –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞...');
    await new Promise(resolve => setTimeout(resolve, 800));
    console.log('   ‚úÖ –û—Ç–æ–±—Ä–∞–Ω–æ 8 –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –ø–æ—Å—Ç–æ–≤');
    
    console.log('3Ô∏è‚É£ –ü–µ—Ä–µ–ø–∏—Å—ã–≤–∞–Ω–∏–µ —á–µ—Ä–µ–∑ GPT-4...');
    await new Promise(resolve => setTimeout(resolve, 1200));
    console.log('   ‚úÖ –°–æ–∑–¥–∞–Ω–æ 8 —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤');
    
    console.log('4Ô∏è‚É£ –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏...');
    await new Promise(resolve => setTimeout(resolve, 500));
    console.log('   ‚úÖ –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–µ 4 —á–∞—Å–∞');
    
    console.log('5Ô∏è‚É£ –ü—É–±–ª–∏–∫–∞—Ü–∏—è –≤ –∫–∞–Ω–∞–ª...');
    await new Promise(resolve => setTimeout(resolve, 800));
    console.log(`   ‚úÖ –û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ –≤ –∫–∞–Ω–∞–ª ${process.env.TARGET_CHANNEL_ID}`);
    
    console.log('');
    console.log('üéâ –¶–ò–ö–õ –ó–ê–í–ï–†–®–ï–ù! –°–ª–µ–¥—É—é—â–∏–π –∑–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ 30 –º–∏–Ω—É—Ç.');
}

async function showMonetizationInfo() {
    console.log('üí∞ –ú–û–ù–ï–¢–ò–ó–ê–¶–ò–Ø ContentBot:');
    console.log('');
    console.log('üìä –¢–∞—Ä–∏—Ñ—ã:');
    console.log(`   üíº –í–µ–¥–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞: ${process.env.MONTHLY_PRICE || 3000}‚ÇΩ/–º–µ—Å—è—Ü`);
    console.log(`   ‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–∞–Ω–∞–ª–∞: ${process.env.CHANNEL_SETUP_PRICE || 10000}‚ÇΩ`);
    console.log(`   üëë –ü—Ä–µ–º–∏—É–º –ø–∞–∫–µ—Ç: ${process.env.PREMIUM_PRICE || 15000}‚ÇΩ/–º–µ—Å—è—Ü`);
    console.log('');
    console.log('üéØ –ß—Ç–æ –ø–æ–ª—É—á–∞–µ—Ç –∫–ª–∏–µ–Ω—Ç:');
    console.log('   ‚Ä¢ –ê–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥ 10 —Ä–∞–∑ –≤ –¥–µ–Ω—å');
    console.log('   ‚Ä¢ –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç —á–µ—Ä–µ–∑ GPT-4');
    console.log('   ‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç–∏–ª—è –ø–æ–¥ –∞—É–¥–∏—Ç–æ—Ä–∏—é');
    console.log('   ‚Ä¢ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞');
    console.log('   ‚Ä¢ –¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞ 24/7');
    console.log('');
    console.log('üí° –ü—Ä–∏ 10 –∫–ª–∏–µ–Ω—Ç–∞—Ö = 30,000‚ÇΩ/–º–µ—Å—è—Ü –ø–∞—Å—Å–∏–≤–Ω–æ–≥–æ –¥–æ—Ö–æ–¥–∞!');
}

async function main() {
    try {
        await showSystemInfo();
        await testContentGeneration();
        await simulateRealWork();
        await showMonetizationInfo();
        
        console.log('');
        console.log('üöÄ –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:');
        console.log('1. –ó–∞–ø—É—Å—Ç–∏ –ø–æ–ª–Ω—É—é —Å–∏—Å—Ç–µ–º—É: ./start.sh pm2');
        console.log('2. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π –±–æ—Ç–∞: /demo –∫–æ–º–∞–Ω–¥–∞');
        console.log('3. –ù–∞—á–∏–Ω–∞–π –ø—Ä–æ–¥–∞–≤–∞—Ç—å —É—Å–ª—É–≥–∏!');
        console.log('');
        console.log('‚úÖ ContentBot –≥–æ—Ç–æ–≤ –∫ –º–æ–Ω–µ—Ç–∏–∑–∞—Ü–∏–∏!');
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error.message);
    }
}

// –ó–∞–ø—É—Å–∫
main().catch(console.error); 