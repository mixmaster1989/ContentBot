// –¢–µ—Å—Ç switchpoint/router —Å –ü–†–ê–í–ò–õ–¨–ù–´–ú–ò –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
const { OpenRouterManager } = require('./telegram_parser/dist/ai/openrouter-manager');

async function testSwitchpointFixed() {
  const ai = OpenRouterManager.get();
  const prompt = '–ù–∞–ø–∏—à–∏ –∫–æ—Ä–æ—Ç–∫–∏–π –ø–æ—Å—Ç –ø—Ä–æ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É –ü–û (50 —Å–ª–æ–≤) —Å —ç–º–æ–¥–∑–∏ üöÄüíª';
  
  try {
    console.log('\nüß™ –¢–µ—Å—Ç–∏—Ä—É—é switchpoint/router —Å –ü–†–ê–í–ò–õ–¨–ù–´–ú–ò –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏');
    console.log('='.repeat(80));
    
    // –£–í–ï–õ–ò–ß–ò–í–ê–ï–ú max_tokens –¥–ª—è —Ä–æ—É—Ç–µ—Ä–∞!
    const result = await ai.makeRequest([
      { role: 'user', content: prompt }
    ], 'switchpoint/router', {
      max_tokens: 10000,  // –ë–û–õ–¨–®–ï –¢–û–ö–ï–ù–û–í!
      temperature: 0.7
    });
    
    console.log('\nüìã –ü–û–õ–ù–´–ô –û–¢–í–ï–¢:');
    console.log('='.repeat(80));
    console.log(JSON.stringify(result, null, 2));
    
    const text = result?.choices?.[0]?.message?.content || '–ù–ï–¢ –ö–û–ù–¢–ï–ù–¢–ê';
    console.log('\nüìù –¢–ï–ö–°–¢ –û–¢–í–ï–¢–ê:');
    console.log('='.repeat(80));
    console.log(text);
    console.log(`–î–ª–∏–Ω–∞: ${text.length} —Å–∏–º–≤–æ–ª–æ–≤`);
    
    return result;
    
  } catch (error) {
    console.log(`‚ùå –û–®–ò–ë–ö–ê: ${error.message}`);
    return null;
  }
}

async function main() {
  console.log('üîß –¢–µ—Å—Ç —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏...\n');
  
  const result = await testSwitchpointFixed();
  
  if (result) {
    console.log('\n‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω');
  } else {
    console.log('\n‚ùå –¢–µ—Å—Ç —Å –æ—à–∏–±–∫–æ–π');
  }
}

main().catch(console.error);

