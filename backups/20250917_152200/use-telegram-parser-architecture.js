#!/usr/bin/env node
/**
 * üéØ ContentBot - –ò–°–ü–û–õ–¨–ó–£–ï–¢ –ê–†–•–ò–¢–ï–ö–¢–£–†–£ telegram_parser
 * –¢–æ—á–Ω–∞—è –∫–æ–ø–∏—è –ª–æ–≥–∏–∫–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–∑ crypto_folder_parser_v2.js
 */

require('dotenv').config();
const path = require('path');
const fs = require('fs');

// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∏–∑ telegram_parser
const telegramParserPath = '/home/user1/telegram_parser';
const { MTProtoClient } = require(path.join(telegramParserPath, 'dist/mtproto/client'));
const axios = require('axios');

console.log('üéØ ContentBot - –ò–°–ü–û–õ–¨–ó–£–ï–ú –ê–†–•–ò–¢–ï–ö–¢–£–†–£ telegram_parser');
console.log('='*60);

class ContentBotSender {
    constructor() {
        // –¢–æ—á–Ω–æ –∫–∞–∫ –≤ crypto_folder_parser_v2.js
        this.mt = MTProtoClient.get();
        this.client = this.mt.getClient();
        this.targetChannelName = "–ö–∞–Ω–∞–ª—ã –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ —Å–¥–µ–ª–æ–∫"; // –ù–∞–∑–≤–∞–Ω–∏–µ —Ü–µ–ª–µ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞
        this.LLM_API_KEY = process.env.LLM_API;
    }

    async init() {
        await this.mt.start();
        console.log('‚úÖ Telegram –∫–ª–∏–µ–Ω—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω');
    }

    // –¢–æ—á–Ω–∞—è –∫–æ–ø–∏—è –∏–∑ crypto_folder_parser_v2.js
    async findTargetChannel() {
        try {
            console.log(`üîç –ò—â–µ–º —Ü–µ–ª–µ–≤–æ–π –∫–∞–Ω–∞–ª: "${this.targetChannelName}"...`);
            const dialogs = await this.client.getDialogs();
            
            for (const dialog of dialogs) {
                if (dialog.title && dialog.title.includes(this.targetChannelName)) {
                    console.log(`‚úÖ –¶–µ–ª–µ–≤–æ–π –∫–∞–Ω–∞–ª –Ω–∞–π–¥–µ–Ω: ${dialog.title}`);
                    return dialog;
                }
            }
            
            console.log(`‚ùå –ö–∞–Ω–∞–ª "${this.targetChannelName}" –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –¥–∏–∞–ª–æ–≥–∞—Ö`);
            return null;
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ —Ü–µ–ª–µ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞:', error.message);
            return null;
        }
    }

    // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ —á–µ—Ä–µ–∑ Cloud.ru
    async generateTradingContent() {
        try {
            console.log('ü§ñ –ì–µ–Ω–µ—Ä–∏—Ä—É—é –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è —Ç—Ä–µ–π–¥–∏–Ω–≥ –∫–∞–Ω–∞–ª–∞...');
            
            const response = await axios.post(
                'https://foundation-models.api.cloud.ru/v1/chat/completions',
                {
                    model: 'openai/gpt-oss-120b',
                    messages: [
                        {
                            role: "system",
                            content: "–¢—ã –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ç—Ä–µ–π–¥–µ—Ä –∏ —ç–∫—Å–ø–µ—Ä—Ç –ø–æ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ —Ç–æ—Ä–≥–æ–≤—ã—Ö –∫–∞–Ω–∞–ª–æ–≤."
                        },
                        {
                            role: "user",
                            content: `–°–æ–∑–¥–∞–π –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –ø–æ—Å—Ç –¥–ª—è –∫–∞–Ω–∞–ª–∞ "–ö–∞–Ω–∞–ª—ã –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ —Å–¥–µ–ª–æ–∫".

–ó–ê–î–ê–ß–ê: –†–∞—Å—Å–∫–∞–∑–∞—Ç—å –ø—Ä–æ ContentBot - —Å–∏—Å—Ç–µ–º—É –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –∫–∞–Ω–∞–ª–æ–≤

–¢–†–ï–ë–û–í–ê–ù–ò–Ø:
- 500-700 —Å–∏–º–≤–æ–ª–æ–≤
- –¢–æ–Ω: –∫–∞–∫ –æ–ø—ã—Ç–Ω—ã–π —Ç—Ä–µ–π–¥–µ—Ä –∫–æ—Ç–æ—Ä—ã–π –Ω–∞—à–µ–ª —Ä–µ—à–µ–Ω–∏–µ
- –£–ø–æ–º—è–Ω–∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—é, AI, –ø–∞—Ä—Å–∏–Ω–≥ —Å–∏–≥–Ω–∞–ª–æ–≤
- –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ü–∏—Ñ—Ä—ã —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
- –ü—Ä–∏–∑—ã–≤ –∫ –¥–µ–π—Å—Ç–≤–∏—é
- 2-3 —ç–º–æ–¥–∑–∏

–°–¢–ò–õ–¨: –£–±–µ–¥–∏—Ç–µ–ª—å–Ω–æ –∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ

–ü–û–°–¢:`
                        }
                    ],
                    max_tokens: 1000,
                    temperature: 0.7
                },
                {
                    headers: {
                        'Authorization': `Bearer ${this.LLM_API_KEY}`,
                        'Content-Type': 'application/json'
                    },
                    timeout: 30000
                }
            );

            const content = response.data.choices[0].message.content.trim();
            console.log('‚úÖ –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω!');
            return content;
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞:', error.message);
            return `üöÄ ContentBot - –†–µ–≤–æ–ª—é—Ü–∏—è –≤ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ —Ç—Ä–µ–π–¥–∏–Ω–≥ –∫–∞–Ω–∞–ª–æ–≤!

–ú–µ—Å—è—Ü—ã —Ä—É—á–Ω–æ–≥–æ –ø–æ—Å—Ç–∏–Ω–≥–∞ —Å–∏–≥–Ω–∞–ª–æ–≤ –≤ –ø—Ä–æ—à–ª–æ–º. –ù–∞—à–∞ AI-—Å–∏—Å—Ç–µ–º–∞:

üìà –ü–∞—Ä—Å–∏—Ç –¢–û–ü-–∫–∞–Ω–∞–ª—ã –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
ü§ñ –ü–µ—Ä–µ–ø–∏—Å—ã–≤–∞–µ—Ç —á–µ—Ä–µ–∑ –Ω–µ–π—Ä–æ—Å–µ—Ç–∏ Cloud.ru  
‚ö° –ê–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥ –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é 24/7
üìä –ü–æ–ª–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –∏ –º–µ—Ç—Ä–∏–∫–∏

–†–ï–ó–£–õ–¨–¢–ê–¢–´ –∫–ª–∏–µ–Ω—Ç–æ–≤:
‚Ä¢ +400% –æ—Ö–≤–∞—Ç–æ–≤
‚Ä¢ -85% –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ –≤–µ–¥–µ–Ω–∏–µ  
‚Ä¢ +250% –Ω–æ–≤—ã—Ö –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤

üí∞ –û—Ç 3000‚ÇΩ/–º–µ—Å –∑–∞ –∫–∞–Ω–∞–ª
‚ö° –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞ 1 –¥–µ–Ω—å

üéØ –ì–æ—Ç–æ–≤ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ–π –∫–∞–Ω–∞–ª? –ü–∏—à–∏ –≤ –ª–∏—á–∫—É!

#ContentBot #–¢—Ä–µ–π–¥–∏–Ω–≥–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è #–ù–µ–π—Ä–æ–ö–æ–Ω—Ç–µ–Ω—Ç`;
        }
    }

    // –¢–æ—á–Ω–∞—è –∫–æ–ø–∏—è –ª–æ–≥–∏–∫–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–∑ crypto_folder_parser_v2.js
    async sendContentToTargetChannel() {
        try {
            console.log(`üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º ContentBot –ø–æ—Å—Ç –≤ –∫–∞–Ω–∞–ª "${this.targetChannelName}"...`);
            
            // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç
            const content = await this.generateTradingContent();
            
            // –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –∏—â–µ–º —Ü–µ–ª–µ–≤–æ–π –∫–∞–Ω–∞–ª (—Ç–æ—á–Ω–æ –∫–∞–∫ –≤ –æ—Ä–∏–≥–∏–Ω–∞–ª–µ)
            const targetEntity = await this.findTargetChannel();
            
            if (!targetEntity) {
                console.log('‚ùå –¶–µ–ª–µ–≤–æ–π –∫–∞–Ω–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ "–°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è"');
                const savedMessages = await this.client.getEntity('me');
                await this.client.sendMessage(savedMessages, { message: content });
                console.log('üì± –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ "–°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è"');
                return { success: true, location: '–°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è', content };
            } else {
                // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ —Ü–µ–ª–µ–≤–æ–π –∫–∞–Ω–∞–ª (—Ç–æ—á–Ω–æ –∫–∞–∫ –≤ –æ—Ä–∏–≥–∏–Ω–∞–ª–µ)
                await this.client.sendMessage(targetEntity, { message: content });
                console.log('‚úÖ ContentBot –ø–æ—Å—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ —Ü–µ–ª–µ–≤–æ–π –∫–∞–Ω–∞–ª!');
                return { success: true, location: targetEntity.title, content };
            }
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ ContentBot –ø–æ—Å—Ç–∞:', error.message);
            return { success: false, error: error.message };
        }
    }

    // –ú–µ—Ç–æ–¥ –¥–ª—è —Ä–µ–∞–ª—Ç–∞–π–º —Å–æ–æ–±—â–µ–Ω–∏–π (—Ç–æ—á–Ω–∞—è –∫–æ–ø–∏—è)
    async sendRealtimeMessage(messageText) {
        try {
            // –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –∏—â–µ–º —Ü–µ–ª–µ–≤–æ–π –∫–∞–Ω–∞–ª –¥–ª—è —Ä–µ–∞–ª—Ç–∞–π–º —Å–æ–æ–±—â–µ–Ω–∏–π
            const targetEntity = await this.findTargetChannel();
            
            if (!targetEntity) {
                console.log('‚ùå –¶–µ–ª–µ–≤–æ–π –∫–∞–Ω–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è —Ä–µ–∞–ª—Ç–∞–π–º —Å–æ–æ–±—â–µ–Ω–∏—è, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ "–°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è"');
                const savedMessages = await this.client.getEntity('me');
                await this.client.sendMessage(savedMessages, { message: messageText });
            } else {
                await this.client.sendMessage(targetEntity, { message: messageText });
                console.log('üì§ –†–µ–∞–ª—Ç–∞–π–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!');
            }
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–µ–∞–ª—Ç–∞–π–º —Å–æ–æ–±—â–µ–Ω–∏—è:', error.message);
        }
    }

    async close() {
        console.log('üîå Telegram –∫–ª–∏–µ–Ω—Ç –æ—Ç–∫–ª—é—á–µ–Ω');
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
function saveResult(result) {
    try {
        const timestamp = new Date().toISOString().replace(/[:.]/g, '-');
        const filename = `contentbot_post_result_${timestamp}.json`;
        fs.writeFileSync(filename, JSON.stringify(result, null, 2), 'utf8');
        console.log(`üíæ –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤: ${filename}`);
    } catch (error) {
        console.log('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç:', error.message);
    }
}

// –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
async function main() {
    const sender = new ContentBotSender();
    
    try {
        console.log('üìä –ù–ê–°–¢–†–û–ô–ö–ò:');
        console.log(`ü§ñ LLM API: ${sender.LLM_API_KEY ? '‚úÖ' : '‚ùå'}`);
        console.log(`üéØ –¶–µ–ª–µ–≤–æ–π –∫–∞–Ω–∞–ª: "${sender.targetChannelName}"`);
        console.log(`üìÅ telegram_parser path: ${telegramParserPath}`);
        console.log('');

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è (—Ç–æ—á–Ω–æ –∫–∞–∫ –≤ –æ—Ä–∏–≥–∏–Ω–∞–ª–µ)
        await sender.init();
        
        // –û—Ç–ø—Ä–∞–≤–∫–∞ ContentBot –ø–æ—Å—Ç–∞
        const result = await sender.sendContentToTargetChannel();
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        saveResult(result);
        
        console.log('\nüéØ –†–ï–ó–£–õ–¨–¢–ê–¢:');
        console.log('='*50);
        
        if (result.success) {
            console.log('üéâ –£–°–ü–ï–•! ContentBot –ø–æ—Å—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω!');
            console.log(`üì∫ –õ–æ–∫–∞—Ü–∏—è: ${result.location}`);
            console.log('üöÄ –°–∏—Å—Ç–µ–º–∞ telegram_parser —Ä–∞–±–æ—Ç–∞–µ—Ç —Å ContentBot!');
            
            console.log('\nüìù –û–ü–£–ë–õ–ò–ö–û–í–ê–ù–ù–´–ô –ö–û–ù–¢–ï–ù–¢:');
            console.log('‚îå' + '‚îÄ'.repeat(70) + '‚îê');
            result.content.split('\n').forEach(line => {
                console.log('‚îÇ ' + line.padEnd(69).substring(0, 69) + '‚îÇ');
            });
            console.log('‚îî' + '‚îÄ'.repeat(70) + '‚îò');
            
        } else {
            console.log('‚ùå –û—à–∏–±–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏:');
            console.log(`üí• ${result.error}`);
        }
        
        console.log('\nüí∞ –°–ò–°–¢–ï–ú–ê –ì–û–¢–û–í–ê:');
        console.log('üî• telegram_parser + ContentBot = PROFIT!');
        console.log('üí≥ 3000‚ÇΩ/–º–µ—Å—è—Ü –∑–∞ –∞–≤—Ç–æ–∫–∞–Ω–∞–ª');
        console.log('‚ö° –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞ 5000‚ÇΩ');
        console.log('üìà ROI –∑–∞ 1-2 –Ω–µ–¥–µ–ª–∏!');
        
        // –ó–∞–∫—Ä—ã—Ç–∏–µ (—Ç–æ—á–Ω–æ –∫–∞–∫ –≤ –æ—Ä–∏–≥–∏–Ω–∞–ª–µ)
        await sender.close();
        
    } catch (error) {
        console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error.message);
        console.log('\nüí° –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê:');
        console.log('1. –ü—Ä–æ–≤–µ—Ä—å —á—Ç–æ telegram_parser —Ä–∞–±–æ—Ç–∞–µ—Ç');
        console.log('2. –ü—Ä–æ–≤–µ—Ä—å —á—Ç–æ —Å–µ—Å—Å–∏—è –∞–∫—Ç–∏–≤–Ω–∞');
        console.log('3. –£–±–µ–¥–∏—Å—å —á—Ç–æ –∫–∞–Ω–∞–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
        
        await sender.close();
    }
}

// –ó–∞–ø—É—Å–∫
console.log('üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º ContentBot —Å –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–æ–π telegram_parser...\n');
main().catch(console.error); 