require('dotenv').config();
const { Bot, GrammyError, HttpError } = require('grammy');
const { ContentParser } = require('../parsers/content-parser');
const { LLMRewriter } = require('../llm/llm-rewriter');
const { PaymentSystem } = require('../payments/payment-system');
const { Database } = require('./database');
const { ChannelManager } = require('./channel-manager');
const cron = require('node-cron');
const fs = require('fs').promises;
const path = require('path');

class ContentBot {
  constructor() {
    this.bot = new Bot(process.env.BOT_TOKEN);
    this.db = new Database();
    this.parser = new ContentParser();
    this.llm = new LLMRewriter();
    this.payments = new PaymentSystem(this.db);
    this.channelManager = new ChannelManager();
    
    this.setupHandlers();
    this.startScheduler();
    
    console.log('üöÄ ContentBot –∑–∞–ø—É—â–µ–Ω!');
  }

  setupHandlers() {
    // –ö–æ–º–∞–Ω–¥–∞ —Å—Ç–∞—Ä—Ç
    this.bot.command('start', async (ctx) => {
      const userId = ctx.from.id;
      const username = ctx.from.username || '–±–µ–∑_username';
      const firstName = ctx.from.first_name || '–±–µ–∑_–∏–º–µ–Ω–∏';
      
      console.log(`üöÄ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${firstName} (@${username}, ID: ${userId}) –∑–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞`);
      await this.db.createUser(userId, ctx.from.username);
      
      await ctx.reply(`
ü§ñ *ContentBot* - –ù–µ–π—Ä–æ-–∫–æ–Ω—Ç–µ–Ω—Ç –∞–≥–µ–Ω—Ç—Å—Ç–≤–æ!

üî• –ß—Ç–æ —è —É–º–µ—é:
‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤–µ–¥—É Telegram –∫–∞–Ω–∞–ª—ã
‚Ä¢ –ü–∞—Ä—Å—é —Ç–æ–ø–æ–≤—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –∏ –ø–µ—Ä–µ–ø–∏—Å—ã–≤–∞—é —á–µ—Ä–µ–∑ –ò–ò  
‚Ä¢ –ì–µ–Ω–µ—Ä–∏—Ä—É—é —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –ø–æ—Å—Ç—ã —Å –∫–∞—Ä—Ç–∏–Ω–∫–∞–º–∏
‚Ä¢ –ü–æ—Å—Ç—é –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é 24/7

üí∞ *–¢–∞—Ä–∏—Ñ—ã:*
‚Ä¢ –í–µ–¥–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞: ${process.env.MONTHLY_PRICE || 3000}‚ÇΩ/–º–µ—Å
‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–∞–Ω–∞–ª–∞: ${process.env.CHANNEL_SETUP_PRICE || 10000}‚ÇΩ
‚Ä¢ –ü—Ä–µ–º–∏—É–º –ø–∞–∫–µ—Ç: ${process.env.PREMIUM_PRICE || 15000}‚ÇΩ/–º–µ—Å

–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:
      `, { 
        parse_mode: 'Markdown',
        reply_markup: {
          inline_keyboard: [
            [{ text: 'üé¨ –î–µ–º–æ-–ø–æ—Å—Ç', callback_data: 'demo' }],
            [{ text: 'üí≥ –ó–∞–∫–∞–∑–∞—Ç—å –∫–∞–Ω–∞–ª', callback_data: 'order' }],
            [{ text: 'üìä –ú–æ–∏ –∫–∞–Ω–∞–ª—ã', callback_data: 'channels' }],
            [{ text: '‚ùì –ü–æ–º–æ—â—å', callback_data: 'help' }]
          ]
        }
      });
    });

    // –î–µ–º–æ —Ñ—É–Ω–∫—Ü–∏–∏
    this.bot.command('demo', async (ctx) => {
      await ctx.reply('üé¨ –ì–µ–Ω–µ—Ä–∏—Ä—É—é –¥–µ–º–æ-–ø–æ—Å—Ç...');
      
      try {
        const demoContent = await this.generateDemoPost();
        await ctx.reply(`üìù *–î–µ–º–æ-–ø–æ—Å—Ç:*\n\n${demoContent}`, { parse_mode: 'Markdown' });
      } catch (error) {
        await ctx.reply('‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–µ–º–æ');
      }
    });

    // –ó–∞–∫–∞–∑ –∫–∞–Ω–∞–ª–∞
    this.bot.command('order', async (ctx) => {
      const userId = ctx.from.id;
      const user = await this.db.getUser(userId);
      
      if (!user) {
        await ctx.reply('‚ùå –°–Ω–∞—á–∞–ª–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ /start');
        return;
      }

      await ctx.reply(`
üí≥ *–ó–∞–∫–∞–∑–∞—Ç—å –≤–µ–¥–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞:*

üî∏ –í–µ–¥–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞: ${process.env.MONTHLY_PRICE}‚ÇΩ/–º–µ—Å
üî∏ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–∞–Ω–∞–ª–∞: ${process.env.CHANNEL_SETUP_PRICE}‚ÇΩ

–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã:
      `, {
        parse_mode: 'Markdown',
        reply_markup: {
          inline_keyboard: [
            [{ text: 'üí≥ –ÆMoney', callback_data: 'pay_yoomoney' }],
            [{ text: '‚Çø –ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞', callback_data: 'pay_crypto' }]
          ]
        }
      });
    });

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ –∏ –ø–ª–∞—Ç–µ–∂–µ–π
    this.bot.on('callback_query', async (ctx) => {
      const data = ctx.callbackQuery.data;
      const userId = ctx.from.id;
      const username = ctx.from.username || '–±–µ–∑_username';
      const firstName = ctx.from.first_name || '–±–µ–∑_–∏–º–µ–Ω–∏';
      
      console.log(`üîò –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${firstName} (@${username}, ID: ${userId}) –Ω–∞–∂–∞–ª –∫–Ω–æ–ø–∫—É: ${data}`);

      // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ –º–µ–Ω—é
      if (data === 'demo') {
        await ctx.editMessageText('üé¨ –ì–µ–Ω–µ—Ä–∏—Ä—É—é –¥–µ–º–æ-–ø–æ—Å—Ç...');
        try {
          const demoContent = await this.generateDemoPost();
          await ctx.editMessageText(`üìù *–î–µ–º–æ-–ø–æ—Å—Ç:*\n\n${demoContent}`, { parse_mode: 'Markdown' });
        } catch (error) {
          await ctx.editMessageText('‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–µ–º–æ');
        }
      }

      if (data === 'order') {
        const user = await this.db.getUser(userId);
        if (!user) {
          await ctx.editMessageText('‚ùå –°–Ω–∞—á–∞–ª–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ /start');
          return;
        }

        await ctx.editMessageText(`
üí≥ *–ó–∞–∫–∞–∑–∞—Ç—å –≤–µ–¥–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞:*

üî∏ –í–µ–¥–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞: ${process.env.MONTHLY_PRICE || 3000}‚ÇΩ/–º–µ—Å
üî∏ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–∞–Ω–∞–ª–∞: ${process.env.CHANNEL_SETUP_PRICE || 10000}‚ÇΩ

–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã:
        `, {
          parse_mode: 'Markdown',
          reply_markup: {
            inline_keyboard: [
              [{ text: 'üí≥ –ÆMoney', callback_data: 'pay_yoomoney' }],
              [{ text: '‚Çø –ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞', callback_data: 'pay_crypto' }]
            ]
          }
        });
      }

      if (data === 'channels') {
        const channels = await this.db.getUserChannels(userId);
        
        if (channels.length === 0) {
          await ctx.editMessageText('üì≠ –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∫–∞–Ω–∞–ª–æ–≤. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /order –¥–ª—è –∑–∞–∫–∞–∑–∞');
          return;
        }

        let message = 'üìä *–í–∞—à–∏ –∫–∞–Ω–∞–ª—ã:*\n\n';
        for (let channel of channels) {
          message += `üî∏ ${channel.channel_name}\n`;
          message += `üìà –°—Ç–∞—Ç—É—Å: ${channel.status}\n`;
          message += `üìÖ –ü–æ—Å—Ç–æ–≤ —Å–µ–≥–æ–¥–Ω—è: ${channel.posts_today}/10\n\n`;
        }

        await ctx.editMessageText(message, { 
          parse_mode: 'Markdown',
          reply_markup: {
            inline_keyboard: [
              [{ text: '‚ö° –°–≥–µ–Ω–µ—Ä–∏—Ç—å —Å–µ–π—á–∞—Å', callback_data: 'generate_now' }],
              [{ text: 'üîô –ù–∞–∑–∞–¥', callback_data: 'back_to_menu' }]
            ]
          }
        });
      }

      if (data === 'help') {
        await ctx.editMessageText(`
ü§ñ *ContentBot - –ü–æ–º–æ—â—å*

üî• *–ß—Ç–æ —è —É–º–µ—é:*
‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤–µ–¥—É Telegram –∫–∞–Ω–∞–ª—ã
‚Ä¢ –ü–∞—Ä—Å—é —Ç–æ–ø–æ–≤—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –∏ –ø–µ—Ä–µ–ø–∏—Å—ã–≤–∞—é —á–µ—Ä–µ–∑ –ò–ò  
‚Ä¢ –ì–µ–Ω–µ—Ä–∏—Ä—É—é —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –ø–æ—Å—Ç—ã —Å –∫–∞—Ä—Ç–∏–Ω–∫–∞–º–∏
‚Ä¢ –ü–æ—Å—Ç—é –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é 24/7

üìã *–ö–æ–º–∞–Ω–¥—ã:*
/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º
/demo - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–µ–º–æ-–ø–æ—Å—Ç
/order - –ó–∞–∫–∞–∑–∞—Ç—å –≤–µ–¥–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞
/channels - –ú–æ–∏ –∫–∞–Ω–∞–ª—ã
/help - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞

üí∞ *–¢–∞—Ä–∏—Ñ—ã:*
‚Ä¢ –í–µ–¥–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞: ${process.env.MONTHLY_PRICE || 3000}‚ÇΩ/–º–µ—Å
‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–∞–Ω–∞–ª–∞: ${process.env.CHANNEL_SETUP_PRICE || 10000}‚ÇΩ
‚Ä¢ –ü—Ä–µ–º–∏—É–º –ø–∞–∫–µ—Ç: ${process.env.PREMIUM_PRICE || 15000}‚ÇΩ/–º–µ—Å

‚ùì *–í–æ–ø—Ä–æ—Å—ã?* –ü–∏—à–∏—Ç–µ @mixmaster1989
        `, { parse_mode: 'Markdown' });
      }

      // –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–ª–∞—Ç–µ–∂–µ–π
      if (data === 'pay_yoomoney') {
        const paymentUrl = await this.payments.createYooMoneyPayment(userId, process.env.MONTHLY_PRICE || 3000);
        await ctx.editMessageText(`üí≥ –û–ø–ª–∞—Ç–∞ —á–µ—Ä–µ–∑ –ÆMoney:\n\n${paymentUrl}`, {
          reply_markup: {
            inline_keyboard: [
              [{ text: '‚úÖ –Ø –æ–ø–ª–∞—Ç–∏–ª', callback_data: 'payment_confirmed' }],
              [{ text: '‚ùå –û—Ç–º–µ–Ω–∞', callback_data: 'payment_cancelled' }]
            ]
          }
        });
      }
      
      if (data === 'payment_confirmed') {
        await ctx.editMessageText(`
üéâ *–û–ø–ª–∞—Ç–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞!*

‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞ –Ω–∞ 30 –¥–Ω–µ–π
üí∞ –¢–∞—Ä–∏—Ñ: –í–µ–¥–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞

üì∫ *–°–ª–µ–¥—É—é—â–∏–π —à–∞–≥:*
–î–æ–±–∞–≤—å—Ç–µ –≤–∞—à –∫–∞–Ω–∞–ª –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –≤–µ–¥–µ–Ω–∏—è

–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /addchannel –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –∫–∞–Ω–∞–ª
        `, { 
          parse_mode: 'Markdown',
          reply_markup: {
            inline_keyboard: [
              [{ text: 'üì∫ –î–æ–±–∞–≤–∏—Ç—å –∫–∞–Ω–∞–ª', callback_data: 'add_channel' }]
            ]
          }
        });
      }
      
      if (data === 'add_channel') {
        await ctx.editMessageText(`
üì∫ –î–æ–±–∞–≤–∏—Ç—å –∫–∞–Ω–∞–ª –¥–ª—è –≤–µ–¥–µ–Ω–∏—è

1Ô∏è‚É£ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∞—à Telegram –∫–∞–Ω–∞–ª:
‚Ä¢ @channel_name
‚Ä¢ https://t.me/channel_name
‚Ä¢ t.me/channel_name
‚Ä¢ https://t.me/+AbCdEfGhIjKlMnOp (–ø—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞)
‚Ä¢ +AbCdEfGhIjKlMnOp (–ø—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞)

2Ô∏è‚É£ –ü–µ—Ä–µ—à–ª–∏—Ç–µ –≤ —ç—Ç–æ—Ç —á–∞—Ç –ª—é–±–æ–π –ø–æ—Å—Ç –∏–∑ –≤–∞—à–µ–≥–æ –∫–∞–Ω–∞–ª–∞

‚ö†Ô∏è –í–∞–∂–Ω–æ:
‚Ä¢ –ë–æ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –∫–∞–Ω–∞–ª–∞
‚Ä¢ –£ –±–æ—Ç–∞ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –ø—Ä–∞–≤–∞ –Ω–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏—é –ø–æ—Å—Ç–æ–≤
‚Ä¢ –ö–∞–Ω–∞–ª –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø—É–±–ª–∏—á–Ω—ã–º –∏–ª–∏ –±–æ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω –≤ –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–∞–Ω–∞–ª

–ü–æ—Å–ª–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞–Ω–∞–ª –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤ –∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–º—É –≤–µ–¥–µ–Ω–∏—é!
        `);
      }
      
      if (data === 'pay_crypto') {
        await ctx.editMessageText(`‚Çø –ö—Ä–∏–ø—Ç–æ–ø–ª–∞—Ç–µ–∂:\n\n–ü–µ—Ä–µ–≤–µ–¥–∏—Ç–µ ${process.env.MONTHLY_PRICE || 3000}‚ÇΩ –Ω–∞:\n${process.env.CRYPTO_WALLET || 'USDT –∫–æ—à–µ–ª–µ–∫'}\n\n–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç –∞–¥–º–∏–Ω—É @mixmaster1989`);
      }

      if (data === 'generate_now') {
        const username = ctx.from.username || '–±–µ–∑_username';
        const firstName = ctx.from.first_name || '–±–µ–∑_–∏–º–µ–Ω–∏';
        
        console.log(`‚ö° –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${firstName} (@${username}, ID: ${userId}) –∑–∞–ø—Ä–æ—Å–∏–ª –º–≥–Ω–æ–≤–µ–Ω–Ω—É—é –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –ø–æ—Å—Ç–∞`);
        
        await ctx.editMessageText('‚ö° –ì–µ–Ω–µ—Ä–∏—Ä—É—é –ø–æ—Å—Ç –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å...');
        
        try {
          // –ü–æ–ª—É—á–∞–µ–º –∫–∞–Ω–∞–ª—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
          const channels = await this.db.getUserChannels(userId);
          
          if (channels.length === 0) {
            await ctx.editMessageText('‚ùå –£ –≤–∞—Å –Ω–µ—Ç –∫–∞–Ω–∞–ª–æ–≤ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–æ—Å—Ç–∞');
            return;
          }
          
          // –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–π –∞–∫—Ç–∏–≤–Ω—ã–π –∫–∞–Ω–∞–ª
          const channel = channels.find(c => c.status === 'active') || channels[0];
          
          if (channel.posts_today >= 10) {
            await ctx.editMessageText('‚ùå –î–æ—Å—Ç–∏–≥–Ω—É—Ç –ª–∏–º–∏—Ç –ø–æ—Å—Ç–æ–≤ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è (10/10)');
            return;
          }
          
          // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç —Å —É—á–µ—Ç–æ–º —Ç–µ–º—ã –∏ —Å—Ç–∏–ª—è –∫–∞–Ω–∞–ª–∞
          const content = await this.generateContent(channel.topic, channel.style);
          
          // –ü—É–±–ª–∏–∫—É–µ–º –≤ –∫–∞–Ω–∞–ª —á–µ—Ä–µ–∑ Bot API
          const chatId = this.resolveBotChatId(channel.channel_id);
          if (!chatId) {
            await ctx.editMessageText(
              '‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–µ–Ω chat_id –∫–∞–Ω–∞–ª–∞ –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏.\n\n–î–æ–±–∞–≤—å—Ç–µ –±–æ—Ç–∞ –∞–¥–º–∏–Ω–æ–º –≤ –∫–∞–Ω–∞–ª –∏ –ø–µ—Ä–µ—à–ª–∏—Ç–µ –≤ —á–∞—Ç —Å –±–æ—Ç–æ–º –ª—é–±–æ–π –ø–æ—Å—Ç –∏–∑ –≤–∞—à–µ–≥–æ –∫–∞–Ω–∞–ª–∞ ‚Äî –º—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ä–µ–¥–µ–ª–∏–º chat_id.'
            );
            return;
          }

          let result = null;
          try {
            const text = content.text || content; 
            const sent = await this.bot.api.sendMessage(chatId, text, {
              disable_web_page_preview: true
            });
            result = { success: true, messageId: sent.message_id };
          } catch (e) {
            result = { success: false, error: e.description || e.message };
          }

          if (result && result.success) {
            // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ –ø–æ—Å—Ç–æ–≤
            await this.db.updateChannelPostsToday(channel.id, channel.posts_today + 1);
            
            await ctx.editMessageText(`
‚úÖ *–ü–æ—Å—Ç —É—Å–ø–µ—à–Ω–æ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω!*

üì∫ –ö–∞–Ω–∞–ª: ${channel.channel_name}
üìù –°—Ç–∏–ª—å: ${channel.style}
üìä –ü–æ—Å—Ç–æ–≤ —Å–µ–≥–æ–¥–Ω—è: ${channel.posts_today + 1}/10

üéâ –ü–æ—Å—Ç –ø–æ—è–≤–∏—Ç—Å—è –≤ –≤–∞—à–µ–º –∫–∞–Ω–∞–ª–µ —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥!
            `, { parse_mode: 'Markdown' });
            
            console.log(`‚úÖ –ú–≥–Ω–æ–≤–µ–Ω–Ω—ã–π –ø–æ—Å—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω –≤ –∫–∞–Ω–∞–ª ${channel.channel_name} –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}`);
            
          } else {
            await ctx.editMessageText(`‚ùå –û—à–∏–±–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: ${result?.error || 'unknown'}\n\n–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –±–æ—Ç —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –∫–∞–Ω–∞–ª–∞ –∏ –∏–º–µ–µ—Ç –ø—Ä–∞–≤–∞ –Ω–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏—é –ø–æ—Å—Ç–æ–≤.`);
          }
          
        } catch (error) {
          console.error('–û—à–∏–±–∫–∞ –º–≥–Ω–æ–≤–µ–Ω–Ω–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏:', error);
          await ctx.editMessageText(`‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–æ—Å—Ç–∞: ${error.message}`);
        }
      }

      if (data === 'back_to_menu') {
        await ctx.editMessageText(`
ü§ñ *ContentBot* - –ù–µ–π—Ä–æ-–∫–æ–Ω—Ç–µ–Ω—Ç –∞–≥–µ–Ω—Ç—Å—Ç–≤–æ!

üî• –ß—Ç–æ —è —É–º–µ—é:
‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤–µ–¥—É Telegram –∫–∞–Ω–∞–ª—ã
‚Ä¢ –ü–∞—Ä—Å—é —Ç–æ–ø–æ–≤—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –∏ –ø–µ—Ä–µ–ø–∏—Å—ã–≤–∞—é —á–µ—Ä–µ–∑ –ò–ò  
‚Ä¢ –ì–µ–Ω–µ—Ä–∏—Ä—É—é —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –ø–æ—Å—Ç—ã —Å –∫–∞—Ä—Ç–∏–Ω–∫–∞–º–∏
‚Ä¢ –ü–æ—Å—Ç—é –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é 24/7

üí∞ *–¢–∞—Ä–∏—Ñ—ã:*
‚Ä¢ –í–µ–¥–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞: ${process.env.MONTHLY_PRICE || 3000}‚ÇΩ/–º–µ—Å
‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–∞–Ω–∞–ª–∞: ${process.env.CHANNEL_SETUP_PRICE || 10000}‚ÇΩ
‚Ä¢ –ü—Ä–µ–º–∏—É–º –ø–∞–∫–µ—Ç: ${process.env.PREMIUM_PRICE || 15000}‚ÇΩ/–º–µ—Å

–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:
        `, { 
          parse_mode: 'Markdown',
          reply_markup: {
            inline_keyboard: [
              [{ text: 'üé¨ –î–µ–º–æ-–ø–æ—Å—Ç', callback_data: 'demo' }],
              [{ text: 'üí≥ –ó–∞–∫–∞–∑–∞—Ç—å –∫–∞–Ω–∞–ª', callback_data: 'order' }],
              [{ text: 'üìä –ú–æ–∏ –∫–∞–Ω–∞–ª—ã', callback_data: 'channels' }],
              [{ text: '‚ùì –ü–æ–º–æ—â—å', callback_data: 'help' }]
            ]
          }
        });
      }

      await ctx.answerCallbackQuery();
    });

    // –ú–æ–∏ –∫–∞–Ω–∞–ª—ã
    this.bot.command('channels', async (ctx) => {
      const userId = ctx.from.id;
      const channels = await this.db.getUserChannels(userId);
      
      if (channels.length === 0) {
        await ctx.reply('üì≠ –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∫–∞–Ω–∞–ª–æ–≤. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /order –¥–ª—è –∑–∞–∫–∞–∑–∞');
        return;
      }

      let message = 'üìä *–í–∞—à–∏ –∫–∞–Ω–∞–ª—ã:*\n\n';
      for (let channel of channels) {
        message += `üî∏ ${channel.name}\n`;
        message += `üìà –°—Ç–∞—Ç—É—Å: ${channel.status}\n`;
        message += `üìÖ –ü–æ—Å—Ç–æ–≤ —Å–µ–≥–æ–¥–Ω—è: ${channel.posts_today}/10\n\n`;
      }

      await ctx.reply(message, { parse_mode: 'Markdown' });
    });

    // –ö–æ–º–∞–Ω–¥–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–∞–Ω–∞–ª–∞
    this.bot.command('addchannel', async (ctx) => {
      const userId = ctx.from.id;
      const username = ctx.from.username || '–±–µ–∑_username';
      const firstName = ctx.from.first_name || '–±–µ–∑_–∏–º–µ–Ω–∏';
      
      console.log(`üì∫ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${firstName} (@${username}, ID: ${userId}) —Ö–æ—á–µ—Ç –¥–æ–±–∞–≤–∏—Ç—å –∫–∞–Ω–∞–ª`);
      
      await ctx.reply(`
üì∫ –î–æ–±–∞–≤–∏—Ç—å –∫–∞–Ω–∞–ª –¥–ª—è –≤–µ–¥–µ–Ω–∏—è

–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∞—à Telegram –∫–∞–Ω–∞–ª –≤ —Ñ–æ—Ä–º–∞—Ç–µ:
‚Ä¢ @channel_name
‚Ä¢ https://t.me/channel_name
‚Ä¢ t.me/channel_name
‚Ä¢ https://t.me/+AbCdEfGhIjKlMnOp (–ø—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞)
‚Ä¢ +AbCdEfGhIjKlMnOp (–ø—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞)

‚ö†Ô∏è –í–∞–∂–Ω–æ:
‚Ä¢ –ë–æ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –∫–∞–Ω–∞–ª–∞
‚Ä¢ –£ –±–æ—Ç–∞ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –ø—Ä–∞–≤–∞ –Ω–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏—é –ø–æ—Å—Ç–æ–≤
‚Ä¢ –ö–∞–Ω–∞–ª –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø—É–±–ª–∏—á–Ω—ã–º –∏–ª–∏ –±–æ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω –≤ –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–∞–Ω–∞–ª

–ü–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–∞–Ω–∞–ª–∞ –Ω–∞—á–Ω–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –≤–µ–¥–µ–Ω–∏–µ!
      `);
    });

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–µ—Ä–µ—Å–ª–∞–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è chat_id –∫–∞–Ω–∞–ª–∞)
    this.bot.on('message:forward_origin', async (ctx) => {
      const userId = ctx.from.id;
      const forwardFrom = ctx.message.forward_origin;
      
      if (forwardFrom && forwardFrom.type === 'channel') {
        const chatId = forwardFrom.chat.id;
        const channelTitle = forwardFrom.chat.title || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∫–∞–Ω–∞–ª';
        
        console.log(`üì∫ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId} –ø–µ—Ä–µ—Å–ª–∞–ª –ø–æ—Å—Ç –∏–∑ –∫–∞–Ω–∞–ª–∞: ${channelTitle} (${chatId})`);
        
        try {
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –∫–∞–Ω–∞–ª —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
          const existingChannels = await this.db.getUserChannels(userId);
          
          if (existingChannels.length > 0) {
            // –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–∞–Ω–∞–ª —Å chat_id
            const channel = existingChannels[0];
            await this.db.runQuery(
              'UPDATE channels SET channel_id = ?, channel_name = ?, status = ? WHERE id = ?',
              [chatId.toString(), channelTitle, 'active', channel.id]
            );
            
            await ctx.reply(`
‚úÖ *Chat ID –∫–∞–Ω–∞–ª–∞ –ø–æ–ª—É—á–µ–Ω!*

üì∫ –ö–∞–Ω–∞–ª: ${channelTitle}
üÜî Chat ID: ${chatId}
üìä –°—Ç–∞—Ç—É—Å: –ì–æ—Ç–æ–≤ –∫ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏

üéâ –¢–µ–ø–µ—Ä—å –±–æ—Ç –º–æ–∂–µ—Ç –ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –ø–æ—Å—Ç—ã –≤ –≤–∞—à –∫–∞–Ω–∞–ª!
–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É "‚ö° –°–≥–µ–Ω–µ—Ä–∏—Ç—å —Å–µ–π—á–∞—Å" –¥–ª—è –º–≥–Ω–æ–≤–µ–Ω–Ω–æ–≥–æ –ø–æ—Å—Ç–∞.
            `);
          } else {
            // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –∫–∞–Ω–∞–ª —Å chat_id
            await this.db.createChannel(userId, chatId, channelTitle, 'active');
            
            await ctx.reply(`
‚úÖ *–ö–∞–Ω–∞–ª –¥–æ–±–∞–≤–ª–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!*

üì∫ –ö–∞–Ω–∞–ª: ${channelTitle}
üÜî Chat ID: ${chatId}
üìä –°—Ç–∞—Ç—É—Å: –ê–∫—Ç–∏–≤–µ–Ω

üéâ –ë–æ—Ç –º–æ–∂–µ—Ç –ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –ø–æ—Å—Ç—ã –≤ –≤–∞—à –∫–∞–Ω–∞–ª!
–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É "‚ö° –°–≥–µ–Ω–µ—Ä–∏—Ç—å —Å–µ–π—á–∞—Å" –¥–ª—è –º–≥–Ω–æ–≤–µ–Ω–Ω–æ–≥–æ –ø–æ—Å—Ç–∞.
            `);
          }
          
        } catch (error) {
          console.error('–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–µ—Ä–µ—Å–ª–∞–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è:', error);
          await ctx.reply('‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–∞–Ω–∞–ª–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
        }
      }
    });

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (—Å—Å—ã–ª–∫–∏ –Ω–∞ –∫–∞–Ω–∞–ª—ã)
    this.bot.on('message:text', async (ctx) => {
      const userId = ctx.from.id;
      const text = ctx.message.text;
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å—Å—ã–ª–∫–æ–π –Ω–∞ –∫–∞–Ω–∞–ª
      if (text.match(/^(@\w+|https?:\/\/t\.me\/[\w+]+|t\.me\/[\w+]+|\+[\w-]+)$/)) {
        const username = ctx.from.username || '–±–µ–∑_username';
        const firstName = ctx.from.first_name || '–±–µ–∑_–∏–º–µ–Ω–∏';
        
        console.log(`üì∫ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${firstName} (@${username}, ID: ${userId}) –¥–æ–±–∞–≤–∏–ª –∫–∞–Ω–∞–ª: ${text}`);
        
        try {
          // –ò–∑–≤–ª–µ–∫–∞–µ–º username –∫–∞–Ω–∞–ª–∞
          let channelUsername = text.replace(/^https?:\/\/t\.me\//, '').replace(/^t\.me\//, '').replace(/^@/, '');
          
          // –î–ª—è –ø—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª—å–Ω—ã—Ö —Å—Å—ã–ª–æ–∫ –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ–ª–Ω—É—é —Å—Å—ã–ª–∫—É
          if (text.startsWith('+') || text.includes('+')) {
            channelUsername = text;
          }
          
          // –î–æ–±–∞–≤–ª—è–µ–º –∫–∞–Ω–∞–ª –≤ –ë–î (–±–µ–∑ chat_id, –±—É–¥–µ—Ç –ø–æ–ª—É—á–µ–Ω —á–µ—Ä–µ–∑ –ø–µ—Ä–µ—Å–ª–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ)
          const channelId = await this.db.createChannel(userId, channelUsername, `@${channelUsername}`, 'pending');
          
          await ctx.reply(`
‚úÖ *–ö–∞–Ω–∞–ª –¥–æ–±–∞–≤–ª–µ–Ω!*

üì∫ –ö–∞–Ω–∞–ª: @${channelUsername}
üÜî ID: ${channelId}
üìä –°—Ç–∞—Ç—É—Å: –û–∂–∏–¥–∞–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏

üì§ *–°–ª–µ–¥—É—é—â–∏–π —à–∞–≥:*
–ü–µ—Ä–µ—à–ª–∏—Ç–µ –≤ —ç—Ç–æ—Ç —á–∞—Ç –ª—é–±–æ–π –ø–æ—Å—Ç –∏–∑ –≤–∞—à–µ–≥–æ –∫–∞–Ω–∞–ª–∞, —á—Ç–æ–±—ã –±–æ—Ç –ø–æ–ª—É—á–∏–ª chat_id –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏.

–ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –∫–∞–Ω–∞–ª –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤ –∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–º—É –≤–µ–¥–µ–Ω–∏—é!
          `);
          
        } catch (error) {
          console.error('–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–∞–Ω–∞–ª–∞:', error);
          await ctx.reply('‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–∞–Ω–∞–ª–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ @mixmaster1989');
        }
      }
    });

    // –ö–æ–º–∞–Ω–¥–∞ –ø–æ–º–æ—â–∏
    this.bot.command('help', async (ctx) => {
      const userId = ctx.from.id;
      const username = ctx.from.username || '–±–µ–∑_username';
      const firstName = ctx.from.first_name || '–±–µ–∑_–∏–º–µ–Ω–∏';
      
      console.log(`‚ùì –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${firstName} (@${username}, ID: ${userId}) –∑–∞–ø—Ä–æ—Å–∏–ª –ø–æ–º–æ—â—å`);
      await ctx.reply(`
ü§ñ *ContentBot - –ü–æ–º–æ—â—å*

üî• *–ß—Ç–æ —è —É–º–µ—é:*
‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤–µ–¥—É Telegram –∫–∞–Ω–∞–ª—ã
‚Ä¢ –ü–∞—Ä—Å—é —Ç–æ–ø–æ–≤—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –∏ –ø–µ—Ä–µ–ø–∏—Å—ã–≤–∞—é —á–µ—Ä–µ–∑ –ò–ò  
‚Ä¢ –ì–µ–Ω–µ—Ä–∏—Ä—É—é —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –ø–æ—Å—Ç—ã —Å –∫–∞—Ä—Ç–∏–Ω–∫–∞–º–∏
‚Ä¢ –ü–æ—Å—Ç—é –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é 24/7

üìã *–ö–æ–º–∞–Ω–¥—ã:*
/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º
/demo - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–µ–º–æ-–ø–æ—Å—Ç
/order - –ó–∞–∫–∞–∑–∞—Ç—å –≤–µ–¥–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞
/channels - –ú–æ–∏ –∫–∞–Ω–∞–ª—ã
/help - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞

üí∞ *–¢–∞—Ä–∏—Ñ—ã:*
‚Ä¢ –í–µ–¥–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞: ${process.env.MONTHLY_PRICE}‚ÇΩ/–º–µ—Å
‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–∞–Ω–∞–ª–∞: ${process.env.CHANNEL_SETUP_PRICE}‚ÇΩ
‚Ä¢ –ü—Ä–µ–º–∏—É–º –ø–∞–∫–µ—Ç: ${process.env.PREMIUM_PRICE}‚ÇΩ/–º–µ—Å

‚ùì *–í–æ–ø—Ä–æ—Å—ã?* –ü–∏—à–∏—Ç–µ @mixmaster1989
      `, { parse_mode: 'Markdown' });
    });

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
    this.bot.catch((err) => {
      const ctx = err.ctx;
      console.error(`–û—à–∏–±–∫–∞ –¥–ª—è ${ctx.update.update_id}:`, err.error);
    });
  }

  async generateDemoPost() {
    // –ü–∞—Ä—Å–∏–º —Å–ª—É—á–∞–π–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç
    const content = await this.parser.getRandomContent();
    
    // –ü–µ—Ä–µ–ø–∏—Å—ã–≤–∞–µ–º —á–µ—Ä–µ–∑ LLM
    const rewritten = await this.llm.rewriteContent(content, '—É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π');
    
    return rewritten;
  }

  async generateContent(topic = '—É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π', style = '—É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π') {
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ–∫—É—â—É—é –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É: –ø–∞—Ä—Å–∏–Ω–≥ –ø–æ —Ç–µ–º–µ -> LLM –ø–µ—Ä–µ–ø–∏—Å—ã–≤–∞–Ω–∏–µ —Å —É—á–µ—Ç–æ–º —Å—Ç–∏–ª—è
    const content = await this.parser.getContentByTopic(topic);
    const rewritten = await this.llm.rewriteContent(content, style);
    return rewritten;
  }

  startScheduler() {
    // –ö–∞–∂–¥—ã–µ 30 –º–∏–Ω—É—Ç –ø—Ä–æ–≤–µ—Ä—è–µ–º –∏ –ø–æ—Å—Ç–∏–º –∫–æ–Ω—Ç–µ–Ω—Ç
    cron.schedule('*/30 * * * *', async () => {
      console.log('üîÑ –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥–∞...');
      await this.processActiveChannels();
    });

    // –ö–∞–∂–¥—ã–π —á–∞—Å –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø–ª–∞—Ç–µ–∂–∏
    cron.schedule('0 * * * *', async () => {
      console.log('üí≥ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–ª–∞—Ç–µ–∂–µ–π...');
      await this.payments.checkPayments();
    });
  }

  async processActiveChannels() {
    const activeChannels = await this.db.getActiveChannels();
    
    for (let channel of activeChannels) {
      try {
        if (channel.posts_today >= 10) continue; // –õ–∏–º–∏—Ç –ø–æ—Å—Ç–æ–≤ –≤ –¥–µ–Ω—å
        
        // –ü–∞—Ä—Å–∏–º –∫–æ–Ω—Ç–µ–Ω—Ç –ø–æ —Ç–µ–º–∞—Ç–∏–∫–µ –∫–∞–Ω–∞–ª–∞
        const content = await this.parser.getContentByTopic(channel.topic);
        
        // –ü–µ—Ä–µ–ø–∏—Å—ã–≤–∞–µ–º —á–µ—Ä–µ–∑ LLM
        const rewritten = await this.llm.rewriteContent(content, channel.style);
        
        // –ü–æ—Å—Ç–∏–º –≤ –∫–∞–Ω–∞–ª
        await this.channelManager.postToChannel(channel.id, rewritten);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫
        await this.db.incrementPostCount(channel.id);
        
        console.log(`‚úÖ –ü–æ—Å—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω –≤ –∫–∞–Ω–∞–ª ${channel.name}`);
        
      } catch (error) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –¥–ª—è –∫–∞–Ω–∞–ª–∞ ${channel.name}:`, error);
      }
    }
  }

  // –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç chat_id –¥–ª—è Bot API –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
  resolveBotChatId(channelId) {
    // –ï—Å–ª–∏ —É–∂–µ —Å–æ—Ö—Ä–∞–Ω—ë–Ω bot chat id –≤–∏–¥–∞ -100XXXXXXXXXXXX, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ
    if (typeof channelId === 'string' && channelId.match(/^\-100\d+$/)) return channelId;
    
    // –ï—Å–ª–∏ —ç—Ç–æ —á–∏—Å–ª–æ–≤–æ–π ID –∫–∞–Ω–∞–ª–∞, –¥–æ–±–∞–≤–ª—è–µ–º –ø—Ä–µ—Ñ–∏–∫—Å -100
    if (typeof channelId === 'string' && channelId.match(/^\d+$/)) return `-100${channelId}`;

    // –ï—Å–ª–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –ø—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞, chat_id –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –Ω–µ–ª—å–∑—è –±–µ–∑ –ø–µ—Ä–µ—Å–ª–∞–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    return null;
  }

  async start() {
    await this.db.init();
    await this.parser.init();
    await this.channelManager.init(this.parser.client);
    await this.bot.start();
    console.log('‚úÖ ContentBot –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!');
  }

  async stop() {
    await this.bot.stop();
    console.log('üõë ContentBot –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
  }
}

// –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if (require.main === module) {
  const contentBot = new ContentBot();
  
  // Graceful shutdown
  process.once('SIGINT', () => contentBot.stop());
  process.once('SIGTERM', () => contentBot.stop());
  
  contentBot.start().catch(console.error);
}

module.exports = { ContentBot }; 