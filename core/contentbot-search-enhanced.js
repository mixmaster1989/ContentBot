require('dotenv').config();
const { Bot, GrammyError, HttpError } = require('grammy');
const { ContentParser } = require('../parsers/content-parser');
const { LLMRewriter } = require('../llm/llm-rewriter');
const { PaymentSystem } = require('../payments/payment-system');
const { Database } = require('./database');
const { ChannelManager } = require('./channel-manager');
const { SearchBotIntegration } = require('./search-bot-integration');
const { MTProtoClient } = require('../../telegram_parser/dist/mtproto/client');
const cron = require('node-cron');
const fs = require('fs').promises;
const path = require('path');

class ContentBotSearchEnhanced {
  constructor() {
    this.bot = new Bot(process.env.BOT_TOKEN);
    this.db = new Database();
    this.parser = new ContentParser();
    this.llm = new LLMRewriter();
    this.payments = new PaymentSystem();
    this.channelManager = new ChannelManager();
    
    // –ù–æ–≤—ã–π –ø–æ–∏—Å–∫–æ–≤—ã–π –º–æ–¥—É–ª—å
    this.searchIntegration = null;
    this.mtClient = null;
    
    this.setupHandlers();
    this.startScheduler();
    
    console.log('üöÄ ContentBot —Å –ø–æ–∏—Å–∫–æ–≤—ã–º –º–æ–¥—É–ª–µ–º –∑–∞–ø—É—â–µ–Ω!');
  }

  async setupSearchModule() {
    try {
      // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º MTProto –∫–ª–∏–µ–Ω—Ç
      this.mtClient = MTProtoClient.get();
      const client = this.mtClient.getClient();
      await client.connect();
      
      // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–æ–∏—Å–∫–æ–≤—ã–π –º–æ–¥—É–ª—å
      this.searchIntegration = new SearchBotIntegration(this.bot, client);
      await this.searchIntegration.init(client);
      
      console.log('‚úÖ –ü–æ–∏—Å–∫–æ–≤—ã–π –º–æ–¥—É–ª—å —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω');
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –ø–æ–∏—Å–∫–æ–≤–æ–≥–æ –º–æ–¥—É–ª—è:', error);
    }
  }

  setupHandlers() {
    // –ö–æ–º–∞–Ω–¥–∞ —Å—Ç–∞—Ä—Ç —Å –ø–æ–∏—Å–∫–æ–≤—ã–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏
    this.bot.command('start', async (ctx) => {
      const userId = ctx.from.id;
      await this.db.createUser(userId, ctx.from.username);
      
      await ctx.reply(`
ü§ñ *ContentBot* - –ù–µ–π—Ä–æ-–∫–æ–Ω—Ç–µ–Ω—Ç –∞–≥–µ–Ω—Ç—Å—Ç–≤–æ!

üî• *–û—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:*
‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤–µ–¥—É Telegram –∫–∞–Ω–∞–ª—ã
‚Ä¢ –ü–∞—Ä—Å—é —Ç–æ–ø–æ–≤—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –∏ –ø–µ—Ä–µ–ø–∏—Å—ã–≤–∞—é —á–µ—Ä–µ–∑ –ò–ò  
‚Ä¢ –ì–µ–Ω–µ—Ä–∏—Ä—É—é —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –ø–æ—Å—Ç—ã —Å –∫–∞—Ä—Ç–∏–Ω–∫–∞–º–∏
‚Ä¢ –ü–æ—Å—Ç—é –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é 24/7

üîç *–ù–æ–≤—ã–π –ø–æ–∏—Å–∫–æ–≤—ã–π –º–æ–¥—É–ª—å:*
‚Ä¢ –ì–ª–æ–±–∞–ª—å–Ω—ã–π –ø–æ–∏—Å–∫ –ø–æ –∫–∞–Ω–∞–ª–∞–º –∏ –≥—Ä—É–ø–ø–∞–º
‚Ä¢ –ü–æ–∏—Å–∫ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º –∏ —Ñ–∏–ª—å—Ç—Ä–∞–º
‚Ä¢ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –∏ —Ç—Ä–µ–Ω–¥—ã
‚Ä¢ –≠–∫—Å–ø–æ—Ä—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤

üí∞ *–¢–∞—Ä–∏—Ñ—ã:*
‚Ä¢ –í–µ–¥–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞: ${process.env.MONTHLY_PRICE}‚ÇΩ/–º–µ—Å
‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–∞–Ω–∞–ª–∞: ${process.env.CHANNEL_SETUP_PRICE}‚ÇΩ
‚Ä¢ –ü—Ä–µ–º–∏—É–º –ø–∞–∫–µ—Ç: ${process.env.PREMIUM_PRICE}‚ÇΩ/–º–µ—Å

*–ö–æ–º–∞–Ω–¥—ã –∫–æ–Ω—Ç–µ–Ω—Ç–∞:*
/demo - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–µ–º–æ
/order - –ó–∞–∫–∞–∑–∞—Ç—å –∫–∞–Ω–∞–ª
/channels - –ú–æ–∏ –∫–∞–Ω–∞–ª—ã

*–ö–æ–º–∞–Ω–¥—ã –ø–æ–∏—Å–∫–∞:*
/search –∑–∞–ø—Ä–æ—Å - –ü–æ–∏—Å–∫ –∫–∞–Ω–∞–ª–æ–≤
/search_advanced - –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –ø–æ–∏—Å–∫
/search_trends - –¢—Ä–µ–Ω–¥–æ–≤—ã–µ –∫–∞–Ω–∞–ª—ã
/search_category - –ü–æ–∏—Å–∫ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º

/help - –ü–æ–ª–Ω–∞—è –ø–æ–º–æ—â—å
      `, { parse_mode: 'Markdown' });
    });

    // –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –ø–æ–º–æ—â–∏
    this.bot.command('help', async (ctx) => {
      await ctx.reply(`
üìñ *–ü–æ–ª–Ω–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ ContentBot*

üéØ *–ö–û–ù–¢–ï–ù–¢-–§–£–ù–ö–¶–ò–ò:*
/demo - –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–µ–º–æ-–ø–æ—Å—Ç–∞
/order - –ó–∞–∫–∞–∑ –≤–µ–¥–µ–Ω–∏—è –∫–∞–Ω–∞–ª–∞  
/channels - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞–º–∏
/analytics - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ—Å—Ç–æ–≤

üîç *–ü–û–ò–°–ö –ö–ê–ù–ê–õ–û–í:*
/search [–∑–∞–ø—Ä–æ—Å] - –ë—ã—Å—Ç—Ä—ã–π –ø–æ–∏—Å–∫
‚Ä¢ –ü—Ä–∏–º–µ—Ä: \`/search –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã\`
‚Ä¢ –ü—Ä–∏–º–µ—Ä: \`/search –Ω–æ–≤–æ—Å—Ç–∏ —Å–ø–æ—Ä—Ç\`

/search_advanced - –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –ø–æ–∏—Å–∫
‚Ä¢ –ü–æ–∏—Å–∫ —Å —Ñ–∏–ª—å—Ç—Ä–∞–º–∏
‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫—Ä–∏—Ç–µ—Ä–∏–µ–≤
‚Ä¢ –ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã

/search_trends - –¢—Ä–µ–Ω–¥–æ–≤—ã–µ –∫–∞–Ω–∞–ª—ã
‚Ä¢ –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –∑–∞ 24 —á–∞—Å–∞
‚Ä¢ –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –∑–∞ –Ω–µ–¥–µ–ª—é
‚Ä¢ –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –∑–∞ –º–µ—Å—è—Ü

/search_category - –ü–æ–∏—Å–∫ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
‚Ä¢ –ù–æ–≤–æ—Å—Ç–∏, –¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏, –ë–∏–∑–Ω–µ—Å
‚Ä¢ –ò–≥—Ä—ã, –ú—É–∑—ã–∫–∞, –°–ø–æ—Ä—Ç
‚Ä¢ –û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ, –§–∏–Ω–∞–Ω—Å—ã, –ö—Ä–∏–ø—Ç–æ

/search_history - –ò—Å—Ç–æ—Ä–∏—è –≤–∞—à–∏—Ö –ø–æ–∏—Å–∫–æ–≤
/search_recommend - –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏

üìä *–§–ò–õ–¨–¢–†–´ –ü–û–ò–°–ö–ê:*
‚Ä¢ –¢–∏–ø: –∫–∞–Ω–∞–ª—ã/–≥—Ä—É–ø–ø—ã/–≤—Å–µ
‚Ä¢ –†–∞–∑–º–µ—Ä: –º–∞–ª—ã–µ/—Å—Ä–µ–¥–Ω–∏–µ/–±–æ–ª—å—à–∏–µ
‚Ä¢ –í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è: —Ç–æ–ª—å–∫–æ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ
‚Ä¢ –ö–∞—Ç–µ–≥–æ—Ä–∏—è: –ª—é–±–∞—è —Ç–µ–º–∞—Ç–∏–∫–∞
‚Ä¢ –Ø–∑—ã–∫: —Ä—É—Å—Å–∫–∏–π/–∞–Ω–≥–ª–∏–π—Å–∫–∏–π/–≤—Å–µ

üíæ *–≠–ö–°–ü–û–†–¢ –†–ï–ó–£–õ–¨–¢–ê–¢–û–í:*
‚Ä¢ JSON —Ñ–æ—Ä–º–∞—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
‚Ä¢ CSV –¥–ª—è —Ç–∞–±–ª–∏—Ü
‚Ä¢ Markdown –¥–ª—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏

üéõÔ∏è *–†–ê–°–®–ò–†–ï–ù–ù–´–ï –í–û–ó–ú–û–ñ–ù–û–°–¢–ò:*
‚Ä¢ –ü–æ–∏—Å–∫ —Å —Å–∏–Ω–æ–Ω–∏–º–∞–º–∏
‚Ä¢ –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–∞—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è
‚Ä¢ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ—Ö–æ–∂–∏—Ö –∫–∞–Ω–∞–ª–æ–≤
‚Ä¢ –ê–Ω–∞–ª–∏–∑ —Ç—Ä–µ–Ω–¥–æ–≤ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏

üí° *–°–û–í–ï–¢–´ –ü–û –ü–û–ò–°–ö–£:*
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞
‚Ä¢ –ü—Ä–æ–±—É–π—Ç–µ —Å–∏–Ω–æ–Ω–∏–º—ã –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —è–∑—ã–∫–∞—Ö
‚Ä¢ –ö–æ–º–±–∏–Ω–∏—Ä—É–π—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ç–µ–º
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–∏–ª—å—Ç—Ä—ã –¥–ª—è —Ç–æ—á–Ω–æ—Å—Ç–∏

‚ö° *–ë–´–°–¢–†–´–ï –ö–û–ú–ê–ù–î–´:*
\`/search –∫—Ä–∏–ø—Ç–æ –¥–µfi\` - –ü–æ–∏—Å–∫ –ø–æ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞–º
\`/search –Ω–æ–≤–æ—Å—Ç–∏ —Ä–æ—Å—Å–∏—è\` - –†–æ—Å—Å–∏–π—Å–∫–∏–µ –Ω–æ–≤–æ—Å—Ç–∏
\`/search –∏–≥—Ä—ã steam\` - –ò–≥—Ä–æ–≤—ã–µ –∫–∞–Ω–∞–ª—ã
\`/search –æ–±—É—á–µ–Ω–∏–µ python\` - –û–±—É—á–∞—é—â–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã

üîß *–¢–ï–•–ù–ò–ß–ï–°–ö–ê–Ø –ü–û–î–î–ï–†–ñ–ö–ê:*
/status - –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º
/feedback - –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å
      `, { parse_mode: 'Markdown' });
    });

    // –î–µ–º–æ —Ñ—É–Ω–∫—Ü–∏–∏
    this.bot.command('demo', async (ctx) => {
      await ctx.reply('üé¨ –ì–µ–Ω–µ—Ä–∏—Ä—É—é –¥–µ–º–æ-–ø–æ—Å—Ç...');
      
      try {
        const demoContent = await this.generateDemoPost();
        await ctx.reply(`üìù *–î–µ–º–æ-–ø–æ—Å—Ç:*\n\n${demoContent}`, { parse_mode: 'Markdown' });
      } catch (error) {
        await ctx.reply('‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–µ–º–æ');
      }
    });

    // –ó–∞–∫–∞–∑ –∫–∞–Ω–∞–ª–∞
    this.bot.command('order', async (ctx) => {
      const userId = ctx.from.id;
      const user = await this.db.getUser(userId);
      
      if (!user) {
        await ctx.reply('‚ùå –°–Ω–∞—á–∞–ª–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ /start');
        return;
      }

      await ctx.reply(`
üí≥ *–ó–∞–∫–∞–∑–∞—Ç—å –≤–µ–¥–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞:*

üî∏ –í–µ–¥–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞: ${process.env.MONTHLY_PRICE}‚ÇΩ/–º–µ—Å
üî∏ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–∞–Ω–∞–ª–∞: ${process.env.CHANNEL_SETUP_PRICE}‚ÇΩ
üî∏ –ü—Ä–µ–º–∏—É–º –ø–∞–∫–µ—Ç: ${process.env.PREMIUM_PRICE}‚ÇΩ/–º–µ—Å

*–ü—Ä–µ–º–∏—É–º –≤–∫–ª—é—á–∞–µ—Ç:*
‚Ä¢ –î–æ 5 –∫–∞–Ω–∞–ª–æ–≤
‚Ä¢ –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞  
‚Ä¢ –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞
‚Ä¢ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –∫–∞–Ω–∞–ª–æ–≤
‚Ä¢ –≠–∫—Å–ø–æ—Ä—Ç –ø–æ–∏—Å–∫–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö

–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã:
      `, {
        parse_mode: 'Markdown',
        reply_markup: {
          inline_keyboard: [
            [{ text: 'üí≥ –ÆMoney', callback_data: 'pay_yoomoney' }],
            [{ text: '‚Çø –ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞', callback_data: 'pay_crypto' }],
            [{ text: 'üéÅ –ü—Ä–æ–º–æ–∫–æ–¥', callback_data: 'pay_promo' }]
          ]
        }
      });
    });

    // –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    this.bot.command('analytics', async (ctx) => {
      const userId = ctx.from.id;
      const user = await this.db.getUser(userId);
      
      if (!user || user.subscription_status === 'free') {
        await ctx.reply('üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /order –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è.');
        return;
      }

      try {
        const channels = await this.db.getUserChannels(userId);
        const searchStats = this.searchIntegration ? this.searchIntegration.getSearchStats() : null;
        
        let message = 'üìä *–í–∞—à–∞ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞*\n\n';
        
        // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–∞–Ω–∞–ª–æ–≤
        message += `üì∫ *–ö–∞–Ω–∞–ª—ã: ${channels.length}*\n`;
        let totalPosts = 0;
        for (let channel of channels) {
          totalPosts += channel.posts_total || 0;
        }
        message += `üìù –í—Å–µ–≥–æ –ø–æ—Å—Ç–æ–≤: ${totalPosts}\n`;
        message += `üìÖ –ü–æ—Å—Ç–æ–≤ —Å–µ–≥–æ–¥–Ω—è: ${channels.reduce((sum, ch) => sum + (ch.posts_today || 0), 0)}\n\n`;
        
        // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–∏—Å–∫–∞
        if (searchStats) {
          message += `üîç *–ü–æ–∏—Å–∫–æ–≤–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å:*\n`;
          message += `‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ã–µ —Å–µ—Å—Å–∏–∏: ${searchStats.activeSearchSessions}\n`;
          message += `‚Ä¢ –ó–∞–ø–∏—Å–µ–π –≤ –∏—Å—Ç–æ—Ä–∏–∏: ${searchStats.totalHistoryEntries}\n`;
          message += `‚Ä¢ –†–∞–∑–º–µ—Ä –∫—ç—à–∞: ${searchStats.searchEngineStats.cacheSize}\n\n`;
        }
        
        await ctx.reply(message, { parse_mode: 'Markdown' });
        
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏:', error);
        await ctx.reply('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏');
      }
    });

    // –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã
    this.bot.command('status', async (ctx) => {
      try {
        const dbStats = await this.db.getTotalStats();
        const searchStats = this.searchIntegration ? this.searchIntegration.getSearchStats() : null;
        
        let message = '‚ö° *–°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã*\n\n';
        message += `üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${dbStats.total_users}\n`;
        message += `üì∫ –ö–∞–Ω–∞–ª–æ–≤: ${dbStats.total_channels}\n`;
        message += `üìù –ü–æ—Å—Ç–æ–≤: ${dbStats.total_posts}\n`;
        message += `üí∞ –î–æ—Ö–æ–¥: ${dbStats.total_revenue}‚ÇΩ\n\n`;
        
        message += `ü§ñ *–°—Ç–∞—Ç—É—Å –º–æ–¥—É–ª–µ–π:*\n`;
        message += `‚Ä¢ –û—Å–Ω–æ–≤–Ω–æ–π –±–æ—Ç: ‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç\n`;
        message += `‚Ä¢ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: ‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∞\n`;
        message += `‚Ä¢ –ü–∞—Ä—Å–µ—Ä –∫–æ–Ω—Ç–µ–Ω—Ç–∞: ‚úÖ –ê–∫—Ç–∏–≤–µ–Ω\n`;
        message += `‚Ä¢ LLM –ø–µ—Ä–µ–ø–∏—Å—á–∏–∫: ‚úÖ –ì–æ—Ç–æ–≤\n`;
        message += `‚Ä¢ –ü–æ–∏—Å–∫–æ–≤—ã–π –º–æ–¥—É–ª—å: ${this.searchIntegration ? '‚úÖ –ê–∫—Ç–∏–≤–µ–Ω' : '‚ùå –û—Ç–∫–ª—é—á–µ–Ω'}\n`;
        message += `‚Ä¢ –ü–ª–∞—Ç–µ–∂–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞: ‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç\n\n`;
        
        if (searchStats) {
          message += `üîç *–ü–æ–∏—Å–∫–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:*\n`;
          message += `‚Ä¢ –î–æ—Å—Ç—É–ø–Ω–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π: ${searchStats.searchEngineStats.availableCategories}\n`;
          message += `‚Ä¢ –†–∞–∑–º–µ—Ä –∫—ç—à–∞: ${searchStats.searchEngineStats.cacheSize} –∑–∞–ø–∏—Å–µ–π\n`;
        }
        
        await ctx.reply(message, { parse_mode: 'Markdown' });
        
      } catch (error) {
        await ctx.reply('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ —Å–∏—Å—Ç–µ–º—ã');
      }
    });

    // –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å
    this.bot.command('feedback', async (ctx) => {
      await ctx.reply(`
üìù *–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å*

–ú—ã —Ü–µ–Ω–∏–º –≤–∞—à–µ –º–Ω–µ–Ω–∏–µ! –ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º:

üêõ **–ù–∞—à–ª–∏ –æ—à–∏–±–∫—É?**
‚Ä¢ –û–ø–∏—à–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É
‚Ä¢ –£–∫–∞–∂–∏—Ç–µ —à–∞–≥–∏ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è
‚Ä¢ –ü—Ä–∏–ª–æ–∂–∏—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç—ã –µ—Å–ª–∏ –≤–æ–∑–º–æ–∂–Ω–æ

üí° **–ï—Å—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è?**
‚Ä¢ –ù–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –ø–æ–∏—Å–∫–∞
‚Ä¢ –£–ª—É—á—à–µ–Ω–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
‚Ä¢ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏

üìä **–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å?**
‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ–∏—Å–∫–∞
‚Ä¢ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤
‚Ä¢ –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö

–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç—É, –Ω–∞—á–∏–Ω–∞—è —Å \`#feedback\`

–ü—Ä–∏–º–µ—Ä: \`#feedback –•–æ—Ç–µ–ª –±—ã –≤–∏–¥–µ—Ç—å –ø–æ–∏—Å–∫ –ø–æ –¥–∞—Ç–µ —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞–Ω–∞–ª–∞\`
      `, { parse_mode: 'Markdown' });
    });

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–ª–∞—Ç–µ–∂–µ–π
    this.bot.on('callback_query', async (ctx) => {
      const data = ctx.callbackQuery.data;
      const userId = ctx.from.id;

      // –ü–ª–∞—Ç–µ–∂–Ω—ã–µ callback'–∏
      if (data === 'pay_yoomoney') {
        const paymentUrl = await this.payments.createYooMoneyPayment(userId, process.env.MONTHLY_PRICE);
        await ctx.editMessageText(`üí≥ –û–ø–ª–∞—Ç–∞ —á–µ—Ä–µ–∑ –ÆMoney:\n\n${paymentUrl}`);
      }
      
      if (data === 'pay_crypto') {
        await ctx.editMessageText(`‚Çø –ö—Ä–∏–ø—Ç–æ–ø–ª–∞—Ç–µ–∂:\n\n–ü–µ—Ä–µ–≤–µ–¥–∏—Ç–µ ${process.env.MONTHLY_PRICE}‚ÇΩ –Ω–∞:\n${process.env.CRYPTO_WALLET}\n\n–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç –∞–¥–º–∏–Ω—É @your_admin`);
      }

      if (data === 'pay_promo') {
        await ctx.editMessageText(`üéÅ –í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ–º–æ–∫–æ–¥:\n\n–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n\`/promo –í–ê–®_–ü–†–û–ú–û–ö–û–î\``, { parse_mode: 'Markdown' });
      }

      await ctx.answerCallbackQuery();
    });

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤
    this.bot.command('promo', async (ctx) => {
      const args = ctx.message.text.split(' ').slice(1);
      if (args.length === 0) {
        await ctx.reply('‚ùå –£–∫–∞–∂–∏—Ç–µ –ø—Ä–æ–º–æ–∫–æ–¥: /promo –í–ê–®_–ü–†–û–ú–û–ö–û–î');
        return;
      }

      const promoCode = args[0];
      const userId = ctx.from.id;
      
      // –ó–¥–µ—Å—å –ª–æ–≥–∏–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–º–æ–∫–æ–¥–∞
      await ctx.reply('üéÅ –ü—Ä–æ–≤–µ—Ä—è—é –ø—Ä–æ–º–æ–∫–æ–¥...');
      
      // –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –ø—Ä–æ–º–æ–∫–æ–¥–∞
      if (promoCode === 'SEARCH2024') {
        await this.db.updateUserSubscription(userId, 'premium', Math.floor(Date.now() / 1000) + 30 * 24 * 3600);
        await ctx.reply('üéâ –ü—Ä–æ–º–æ–∫–æ–¥ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω! –í–∞–º –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω –ø—Ä–µ–º–∏—É–º –Ω–∞ 30 –¥–Ω–µ–π —Å –ø–æ–ª–Ω—ã–º –¥–æ—Å—Ç—É–ø–æ–º –∫ –ø–æ–∏—Å–∫–æ–≤–æ–º—É –º–æ–¥—É–ª—é!');
      } else {
        await ctx.reply('‚ùå –ü—Ä–æ–º–æ–∫–æ–¥ –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω –∏–ª–∏ –∏—Å—Ç–µ–∫');
      }
    });

    // –ú–æ–∏ –∫–∞–Ω–∞–ª—ã
    this.bot.command('channels', async (ctx) => {
      const userId = ctx.from.id;
      const channels = await this.db.getUserChannels(userId);
      
      if (channels.length === 0) {
        await ctx.reply('üì≠ –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∫–∞–Ω–∞–ª–æ–≤. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /order –¥–ª—è –∑–∞–∫–∞–∑–∞');
        return;
      }

      let message = 'üìä *–í–∞—à–∏ –∫–∞–Ω–∞–ª—ã:*\n\n';
      for (let channel of channels) {
        message += `üî∏ ${channel.channel_name}\n`;
        message += `üìà –°—Ç–∞—Ç—É—Å: ${channel.status}\n`;
        message += `üìÖ –ü–æ—Å—Ç–æ–≤ —Å–µ–≥–æ–¥–Ω—è: ${channel.posts_today}/10\n`;
        message += `üìù –í—Å–µ–≥–æ –ø–æ—Å—Ç–æ–≤: ${channel.posts_total}\n`;
        message += `üè∑Ô∏è –¢–µ–º–∞—Ç–∏–∫–∞: ${channel.topic}\n`;
        message += `‚úçÔ∏è –°—Ç–∏–ª—å: ${channel.style}\n\n`;
      }

      const keyboard = {
        inline_keyboard: [
          [{ text: 'üîç –ù–∞–π—Ç–∏ –ø–æ—Ö–æ–∂–∏–µ –∫–∞–Ω–∞–ª—ã', callback_data: 'find_similar_channels' }],
          [{ text: 'üìä –ü–æ–¥—Ä–æ–±–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞', callback_data: 'detailed_analytics' }]
        ]
      };

      await ctx.reply(message, { 
        parse_mode: 'Markdown',
        reply_markup: keyboard 
      });
    });

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è —Ñ–∏–¥–±–µ–∫–∞
    this.bot.on('message:text', async (ctx) => {
      const text = ctx.message.text;
      
      if (text.startsWith('#feedback')) {
        const feedback = text.replace('#feedback', '').trim();
        const userId = ctx.from.id;
        const username = ctx.from.username || '–ù–µ —É–∫–∞–∑–∞–Ω';
        
        console.log(`üìù Feedback –æ—Ç ${username} (${userId}): ${feedback}`);
        
        await ctx.reply('‚úÖ –°–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å! –ú—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º –≤–∞—à–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ.');
        
        // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º
        return;
      }
      
      // –ï—Å–ª–∏ –Ω–µ –∫–æ–º–∞–Ω–¥–∞ –∏ –Ω–µ —Ñ–∏–¥–±–µ–∫, –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–æ–∏—Å–∫
      if (!text.startsWith('/')) {
        await ctx.reply(`
üîç –í–æ–∑–º–æ–∂–Ω–æ, –≤—ã —Ö–æ—Ç–∏—Ç–µ –Ω–∞–π—Ç–∏ –∫–∞–Ω–∞–ª—ã –ø–æ –∑–∞–ø—Ä–æ—Å—É "${text}"?

–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: \`/search ${text}\`

–ò–ª–∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ:
‚Ä¢ /search_advanced - —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –ø–æ–∏—Å–∫
‚Ä¢ /search_category - –ø–æ–∏—Å–∫ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
‚Ä¢ /search_trends - —Ç—Ä–µ–Ω–¥–æ–≤—ã–µ –∫–∞–Ω–∞–ª—ã
        `, { parse_mode: 'Markdown' });
      }
    });

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
    this.bot.catch((err) => {
      const ctx = err.ctx;
      console.error(`–û—à–∏–±–∫–∞ –¥–ª—è ${ctx.update.update_id}:`, err.error);
      
      if (err.error instanceof GrammyError) {
        console.error('–û—à–∏–±–∫–∞ –≤ –∑–∞–ø—Ä–æ—Å–µ –∫ Telegram:', err.error.description);
      } else if (err.error instanceof HttpError) {
        console.error('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–≤—è–∑–∞—Ç—å—Å—è —Å Telegram:', err.error);
      } else {
        console.error('–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞:', err.error);
      }
    });
  }

  async generateDemoPost() {
    // –ü–∞—Ä—Å–∏–º —Å–ª—É—á–∞–π–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç
    const content = await this.parser.getRandomContent();
    
    // –ü–µ—Ä–µ–ø–∏—Å—ã–≤–∞–µ–º —á–µ—Ä–µ–∑ LLM
    const rewritten = await this.llm.rewriteContent(content, '—É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π');
    
    return rewritten;
  }

  startScheduler() {
    // –ö–∞–∂–¥—ã–µ 30 –º–∏–Ω—É—Ç –ø—Ä–æ–≤–µ—Ä—è–µ–º –∏ –ø–æ—Å—Ç–∏–º –∫–æ–Ω—Ç–µ–Ω—Ç
    cron.schedule('*/30 * * * *', async () => {
      console.log('üîÑ –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥–∞...');
      await this.processActiveChannels();
    });

    // –ö–∞–∂–¥—ã–π —á–∞—Å –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø–ª–∞—Ç–µ–∂–∏
    cron.schedule('0 * * * *', async () => {
      console.log('üí≥ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–ª–∞—Ç–µ–∂–µ–π...');
      await this.payments.checkPayments();
    });

    // –ö–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ –ø–æ–ª–Ω–æ—á—å —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫–∏ –ø–æ—Å—Ç–æ–≤
    cron.schedule('0 0 * * *', async () => {
      console.log('üîÑ –°–±—Ä–æ—Å –µ–∂–µ–¥–Ω–µ–≤–Ω—ã—Ö —Å—á–µ—Ç—á–∏–∫–æ–≤...');
      await this.db.resetDailyPostCounts();
    });

    // –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞ –ø–æ–∏—Å–∫–∞ –∫–∞–∂–¥—ã–µ 6 —á–∞—Å–æ–≤
    cron.schedule('0 */6 * * *', async () => {
      console.log('üßπ –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞ –ø–æ–∏—Å–∫–∞...');
      if (this.searchIntegration) {
        this.searchIntegration.cleanup();
      }
    });
  }

  async processActiveChannels() {
    const activeChannels = await this.db.getActiveChannels();
    
    for (let channel of activeChannels) {
      try {
        if (channel.posts_today >= 10) continue; // –õ–∏–º–∏—Ç –ø–æ—Å—Ç–æ–≤ –≤ –¥–µ–Ω—å
        
        // –ü–∞—Ä—Å–∏–º –∫–æ–Ω—Ç–µ–Ω—Ç –ø–æ —Ç–µ–º–∞—Ç–∏–∫–µ –∫–∞–Ω–∞–ª–∞
        const content = await this.parser.getContentByTopic(channel.topic);
        
        // –ü–µ—Ä–µ–ø–∏—Å—ã–≤–∞–µ–º —á–µ—Ä–µ–∑ LLM
        const rewritten = await this.llm.rewriteContent(content, channel.style);
        
        // –ü–æ—Å—Ç–∏–º –≤ –∫–∞–Ω–∞–ª
        await this.channelManager.postToChannel(channel.id, rewritten);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫
        await this.db.incrementPostCount(channel.id);
        
        console.log(`‚úÖ –ü–æ—Å—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω –≤ –∫–∞–Ω–∞–ª ${channel.channel_name}`);
        
      } catch (error) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –¥–ª—è –∫–∞–Ω–∞–ª–∞ ${channel.channel_name}:`, error);
      }
    }
  }

  async start() {
    try {
      await this.db.init();
      
      // –ü–æ–¥–∫–ª—é—á–∞–µ–º –ø–æ–∏—Å–∫–æ–≤—ã–π –º–æ–¥—É–ª—å
      await this.setupSearchModule();
      
      await this.bot.start();
      console.log('‚úÖ ContentBot —Å –ø–æ–∏—Å–∫–æ–≤—ã–º –º–æ–¥—É–ª–µ–º –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!');
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞:', error);
    }
  }

  async stop() {
    try {
      // –û—á–∏—â–∞–µ–º —Ä–µ—Å—É—Ä—Å—ã –ø–æ–∏—Å–∫–æ–≤–æ–≥–æ –º–æ–¥—É–ª—è
      if (this.searchIntegration) {
        this.searchIntegration.cleanup();
      }
      
      // –û—Ç–∫–ª—é—á–∞–µ–º MTProto –∫–ª–∏–µ–Ω—Ç
      if (this.mtClient) {
        const client = this.mtClient.getClient();
        await client.disconnect();
      }
      
      await this.bot.stop();
      console.log('üõë ContentBot –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –±–æ—Ç–∞:', error);
    }
  }
}

// –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if (require.main === module) {
  const contentBot = new ContentBotSearchEnhanced();
  
  // Graceful shutdown
  process.once('SIGINT', () => contentBot.stop());
  process.once('SIGTERM', () => contentBot.stop());
  
  contentBot.start().catch(console.error);
}

module.exports = { ContentBotSearchEnhanced };
